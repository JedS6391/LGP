[{"name":"Binary(2)","description":"nz.co.jedsimson.lgp.core.program.instructions.BaseArity.Binary","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-base-arity/-binary/index.html","searchKeys":["Binary","Binary(2)","nz.co.jedsimson.lgp.core.program.instructions.BaseArity.Binary"]},{"name":"Calculation()","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterType.Calculation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-type/-calculation/index.html","searchKeys":["Calculation","Calculation()","nz.co.jedsimson.lgp.core.program.registers.RegisterType.Calculation"]},{"name":"Constant()","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterType.Constant","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-type/-constant/index.html","searchKeys":["Constant","Constant()","nz.co.jedsimson.lgp.core.program.registers.RegisterType.Constant"]},{"name":"FitnessContext()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.FitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-fitness-context/index.html","searchKeys":["FitnessContext","FitnessContext()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.FitnessContext"]},{"name":"Input()","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterType.Input","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-type/-input/index.html","searchKeys":["Input","Input()","nz.co.jedsimson.lgp.core.program.registers.RegisterType.Input"]},{"name":"InstructionGenerator()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.InstructionGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-instruction-generator/index.html","searchKeys":["InstructionGenerator","InstructionGenerator()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.InstructionGenerator"]},{"name":"MacroMutationOperator()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.MacroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-macro-mutation-operator/index.html","searchKeys":["MacroMutationOperator","MacroMutationOperator()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.MacroMutationOperator"]},{"name":"MicroMutationOperator()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.MicroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-micro-mutation-operator/index.html","searchKeys":["MicroMutationOperator","MicroMutationOperator()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.MicroMutationOperator"]},{"name":"ProgramGenerator()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.ProgramGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-program-generator/index.html","searchKeys":["ProgramGenerator","ProgramGenerator()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.ProgramGenerator"]},{"name":"RecombinationOperator()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.RecombinationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-recombination-operator/index.html","searchKeys":["RecombinationOperator","RecombinationOperator()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.RecombinationOperator"]},{"name":"SelectionOperator()","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType.SelectionOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/-selection-operator/index.html","searchKeys":["SelectionOperator","SelectionOperator()","nz.co.jedsimson.lgp.core.modules.CoreModuleType.SelectionOperator"]},{"name":"Unary(1)","description":"nz.co.jedsimson.lgp.core.program.instructions.BaseArity.Unary","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-base-arity/-unary/index.html","searchKeys":["Unary","Unary(1)","nz.co.jedsimson.lgp.core.program.instructions.BaseArity.Unary"]},{"name":"Unknown()","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterType.Unknown","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-type/-unknown/index.html","searchKeys":["Unknown","Unknown()","nz.co.jedsimson.lgp.core.program.registers.RegisterType.Unknown"]},{"name":"abstract class BaseFitnessContext<TData, TOutput : Output<TData>, TTarget : Target<TData>>(environment: EnvironmentFacade<TData, TOutput, TTarget>) : FitnessContext<TData, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.fitness.BaseFitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-base-fitness-context/index.html","searchKeys":["BaseFitnessContext","abstract class BaseFitnessContext<TData, TOutput : Output<TData>, TTarget : Target<TData>>(environment: EnvironmentFacade<TData, TOutput, TTarget>) : FitnessContext<TData, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.fitness.BaseFitnessContext"]},{"name":"abstract class BinaryOperation<T>(function: (Arguments<T>) -> T, arity: BaseArity) : Operation<T> ","description":"nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-binary-operation/index.html","searchKeys":["BinaryOperation","abstract class BinaryOperation<T>(function: (Arguments<T>) -> T, arity: BaseArity) : Operation<T> ","nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation"]},{"name":"abstract class EvolutionModel<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-model/index.html","searchKeys":["EvolutionModel","abstract class EvolutionModel<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel"]},{"name":"abstract class FitnessContext<TData, TOutput : Output<TData>, TTarget : Target<TData>>(environment: EnvironmentFacade<TData, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-context/index.html","searchKeys":["FitnessContext","abstract class FitnessContext<TData, TOutput : Output<TData>, TTarget : Target<TData>>(environment: EnvironmentFacade<TData, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContext"]},{"name":"abstract class FitnessFunction<TData, TOutput : Output<TData>, TTarget : Target<TData>>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-function/index.html","searchKeys":["FitnessFunction","abstract class FitnessFunction<TData, TOutput : Output<TData>, TTarget : Target<TData>>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction"]},{"name":"abstract class Instruction<TData> : Module","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/index.html","searchKeys":["Instruction","abstract class Instruction<TData> : Module","nz.co.jedsimson.lgp.core.program.instructions.Instruction"]},{"name":"abstract class InstructionGenerator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction-generator/index.html","searchKeys":["InstructionGenerator","abstract class InstructionGenerator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator"]},{"name":"abstract class ModuleFactory<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(container: ModuleContainer<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.modules.ModuleFactory","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-factory/index.html","searchKeys":["ModuleFactory","abstract class ModuleFactory<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(container: ModuleContainer<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.modules.ModuleFactory"]},{"name":"abstract class MutationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.MutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation/-mutation-operator/index.html","searchKeys":["MutationOperator","abstract class MutationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.evolution.operators.mutation.MutationOperator"]},{"name":"abstract class MutationStrategy<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy/-mutation-strategy/index.html","searchKeys":["MutationStrategy","abstract class MutationStrategy<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategy"]},{"name":"abstract class MutationStrategyFactory<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategyFactory","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy/-mutation-strategy-factory/index.html","searchKeys":["MutationStrategyFactory","abstract class MutationStrategyFactory<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>","nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategyFactory"]},{"name":"abstract class Operation<TData> : Module","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/index.html","searchKeys":["Operation","abstract class Operation<TData> : Module","nz.co.jedsimson.lgp.core.program.instructions.Operation"]},{"name":"abstract class Problem<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>","description":"nz.co.jedsimson.lgp.core.evolution.Problem","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/index.html","searchKeys":["Problem","abstract class Problem<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>","nz.co.jedsimson.lgp.core.evolution.Problem"]},{"name":"abstract class Program<TData, TOutput : Output<TData>> : Module","description":"nz.co.jedsimson.lgp.core.program.Program","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/index.html","searchKeys":["Program","abstract class Program<TData, TOutput : Output<TData>> : Module","nz.co.jedsimson.lgp.core.program.Program"]},{"name":"abstract class ProgramGenerator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, instructionGenerator: InstructionGenerator<TProgram, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.program.ProgramGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-generator/index.html","searchKeys":["ProgramGenerator","abstract class ProgramGenerator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, instructionGenerator: InstructionGenerator<TProgram, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.program.ProgramGenerator"]},{"name":"abstract class ProgramTranslator<TProgram, TOutput : Output<TProgram>> : Module","description":"nz.co.jedsimson.lgp.core.program.ProgramTranslator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-translator/index.html","searchKeys":["ProgramTranslator","abstract class ProgramTranslator<TProgram, TOutput : Output<TProgram>> : Module","nz.co.jedsimson.lgp.core.program.ProgramTranslator"]},{"name":"abstract class RecombinationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.RecombinationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination/-recombination-operator/index.html","searchKeys":["RecombinationOperator","abstract class RecombinationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.evolution.operators.recombination.RecombinationOperator"]},{"name":"abstract class ResultAggregator<T> : Module, AutoCloseable","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregator/index.html","searchKeys":["ResultAggregator","abstract class ResultAggregator<T> : Module, AutoCloseable","nz.co.jedsimson.lgp.core.evolution.ResultAggregator"]},{"name":"abstract class SelectionOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.SelectionOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-selection-operator/index.html","searchKeys":["SelectionOperator","abstract class SelectionOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : Module","nz.co.jedsimson.lgp.core.evolution.operators.selection.SelectionOperator"]},{"name":"abstract class Trainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>, TMessage : TrainingUpdateMessage>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.training.Trainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-trainer/index.html","searchKeys":["Trainer","abstract class Trainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>, TMessage : TrainingUpdateMessage>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.training.Trainer"]},{"name":"abstract class TrainingJob<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>, TMessage : TrainingUpdateMessage>","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingJob","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-job/index.html","searchKeys":["TrainingJob","abstract class TrainingJob<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>, TMessage : TrainingUpdateMessage>","nz.co.jedsimson.lgp.core.evolution.training.TrainingJob"]},{"name":"abstract class UnaryOperation<T>(function: (Arguments<T>) -> T, arity: BaseArity) : Operation<T> ","description":"nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-unary-operation/index.html","searchKeys":["UnaryOperation","abstract class UnaryOperation<T>(function: (Arguments<T>) -> T, arity: BaseArity) : Operation<T> ","nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation"]},{"name":"abstract fun add(result: ExportableResult<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregator.add","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregator/add.html","searchKeys":["add","abstract fun add(result: ExportableResult<T>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregator.add"]},{"name":"abstract fun addAll(results: List<ExportableResult<T>>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregator.addAll","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregator/add-all.html","searchKeys":["addAll","abstract fun addAll(results: List<ExportableResult<T>>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregator.addAll"]},{"name":"abstract fun apply(index: Int, modifier: (TData) -> TData)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.apply","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/apply.html","searchKeys":["apply","abstract fun apply(index: Int, modifier: (TData) -> TData)","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.apply"]},{"name":"abstract fun build(): TComponentLoader","description":"nz.co.jedsimson.lgp.core.environment.ComponentLoaderBuilder.build","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-loader-builder/build.html","searchKeys":["build","abstract fun build(): TComponentLoader","nz.co.jedsimson.lgp.core.environment.ComponentLoaderBuilder.build"]},{"name":"abstract fun combine(mother: Program<TProgram, TOutput>, father: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.RecombinationOperator.combine","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination/-recombination-operator/combine.html","searchKeys":["combine","abstract fun combine(mother: Program<TProgram, TOutput>, father: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.operators.recombination.RecombinationOperator.combine"]},{"name":"abstract fun copy(): EnvironmentFacade<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/copy.html","searchKeys":["copy","abstract fun copy(): EnvironmentFacade<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.copy"]},{"name":"abstract fun copy(): EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-model/copy.html","searchKeys":["copy","abstract fun copy(): EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.copy"]},{"name":"abstract fun copy(): Instruction<TData>","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/copy.html","searchKeys":["copy","abstract fun copy(): Instruction<TData>","nz.co.jedsimson.lgp.core.program.instructions.Instruction.copy"]},{"name":"abstract fun copy(): Program<TData, TOutput>","description":"nz.co.jedsimson.lgp.core.program.Program.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/copy.html","searchKeys":["copy","abstract fun copy(): Program<TData, TOutput>","nz.co.jedsimson.lgp.core.program.Program.copy"]},{"name":"abstract fun copy(): RegisterSet<TData>","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/copy.html","searchKeys":["copy","abstract fun copy(): RegisterSet<TData>","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.copy"]},{"name":"abstract fun debug(message: () -> Any?)","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger.debug","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/debug.html","searchKeys":["debug","abstract fun debug(message: () -> Any?)","nz.co.jedsimson.lgp.core.environment.logging.Logger.debug"]},{"name":"abstract fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.deepCopy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-model/deep-copy.html","searchKeys":["deepCopy","abstract fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.deepCopy"]},{"name":"abstract fun error(message: () -> Any?)","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger.error","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/error.html","searchKeys":["error","abstract fun error(message: () -> Any?)","nz.co.jedsimson.lgp.core.environment.logging.Logger.error"]},{"name":"abstract fun error(throwable: Throwable, message: () -> Any?)","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger.error","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/error.html","searchKeys":["error","abstract fun error(throwable: Throwable, message: () -> Any?)","nz.co.jedsimson.lgp.core.environment.logging.Logger.error"]},{"name":"abstract fun execute()","description":"nz.co.jedsimson.lgp.core.program.Program.execute","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/execute.html","searchKeys":["execute","abstract fun execute()","nz.co.jedsimson.lgp.core.program.Program.execute"]},{"name":"abstract fun execute(registers: RegisterSet<TData>)","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction.execute","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/execute.html","searchKeys":["execute","abstract fun execute(registers: RegisterSet<TData>)","nz.co.jedsimson.lgp.core.program.instructions.Instruction.execute"]},{"name":"abstract fun export(): List<Pair<String, String>>","description":"nz.co.jedsimson.lgp.core.evolution.ExportableResult.export","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-exportable-result/export.html","searchKeys":["export","abstract fun export(): List<Pair<String, String>>","nz.co.jedsimson.lgp.core.evolution.ExportableResult.export"]},{"name":"abstract fun findEffectiveProgram()","description":"nz.co.jedsimson.lgp.core.program.Program.findEffectiveProgram","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/find-effective-program.html","searchKeys":["findEffectiveProgram","abstract fun findEffectiveProgram()","nz.co.jedsimson.lgp.core.program.Program.findEffectiveProgram"]},{"name":"abstract fun fitness(outputs: List<TOutput>, cases: List<FitnessCase<TData, TTarget>>): Double","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction.fitness","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-function/fitness.html","searchKeys":["fitness","abstract fun fitness(outputs: List<TOutput>, cases: List<FitnessCase<TData, TTarget>>): Double","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction.fitness"]},{"name":"abstract fun fitness(program: Program<TData, TOutput>, fitnessCases: List<FitnessCase<TData, TTarget>>): Double","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContext.fitness","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-context/fitness.html","searchKeys":["fitness","abstract fun fitness(program: Program<TData, TOutput>, fitnessCases: List<FitnessCase<TData, TTarget>>): Double","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContext.fitness"]},{"name":"abstract fun generateInstruction(): Instruction<TProgram>","description":"nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.generateInstruction","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction-generator/generate-instruction.html","searchKeys":["generateInstruction","abstract fun generateInstruction(): Instruction<TProgram>","nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.generateInstruction"]},{"name":"abstract fun generateProgram(): Program<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.program.ProgramGenerator.generateProgram","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-generator/generate-program.html","searchKeys":["generateProgram","abstract fun generateProgram(): Program<TProgram, TOutput>","nz.co.jedsimson.lgp.core.program.ProgramGenerator.generateProgram"]},{"name":"abstract fun getStrategyForIndividual(individual: Program<TProgram, TOutput>): MutationStrategy<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategyFactory.getStrategyForIndividual","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy/-mutation-strategy-factory/get-strategy-for-individual.html","searchKeys":["getStrategyForIndividual","abstract fun getStrategyForIndividual(individual: Program<TProgram, TOutput>): MutationStrategy<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategyFactory.getStrategyForIndividual"]},{"name":"abstract fun handle(event: TEvent)","description":"nz.co.jedsimson.lgp.core.environment.events.EventListener.handle","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-listener/handle.html","searchKeys":["handle","abstract fun handle(event: TEvent)","nz.co.jedsimson.lgp.core.environment.events.EventListener.handle"]},{"name":"abstract fun info(message: () -> Any?)","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger.info","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/info.html","searchKeys":["info","abstract fun info(message: () -> Any?)","nz.co.jedsimson.lgp.core.environment.logging.Logger.info"]},{"name":"abstract fun initialiseEnvironment()","description":"nz.co.jedsimson.lgp.core.evolution.Problem.initialiseEnvironment","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/initialise-environment.html","searchKeys":["initialiseEnvironment","abstract fun initialiseEnvironment()","nz.co.jedsimson.lgp.core.evolution.Problem.initialiseEnvironment"]},{"name":"abstract fun initialiseModel()","description":"nz.co.jedsimson.lgp.core.evolution.Problem.initialiseModel","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/initialise-model.html","searchKeys":["initialiseModel","abstract fun initialiseModel()","nz.co.jedsimson.lgp.core.evolution.Problem.initialiseModel"]},{"name":"abstract fun load(): TComponent","description":"nz.co.jedsimson.lgp.core.environment.ComponentLoader.load","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-loader/load.html","searchKeys":["load","abstract fun load(): TComponent","nz.co.jedsimson.lgp.core.environment.ComponentLoader.load"]},{"name":"abstract fun mutate(individual: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.MutationOperator.mutate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation/-mutation-operator/mutate.html","searchKeys":["mutate","abstract fun mutate(individual: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.MutationOperator.mutate"]},{"name":"abstract fun mutate(individual: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategy.mutate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy/-mutation-strategy/mutate.html","searchKeys":["mutate","abstract fun mutate(individual: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategy.mutate"]},{"name":"abstract fun output(): TOutput","description":"nz.co.jedsimson.lgp.core.program.Program.output","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/output.html","searchKeys":["output","abstract fun output(): TOutput","nz.co.jedsimson.lgp.core.program.Program.output"]},{"name":"abstract fun overwrite(index: Int, value: TData)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.overwrite","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/overwrite.html","searchKeys":["overwrite","abstract fun overwrite(index: Int, value: TData)","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.overwrite"]},{"name":"abstract fun register(index: Int): Register<TData>","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.register","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/register.html","searchKeys":["register","abstract fun register(index: Int): Register<TData>","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.register"]},{"name":"abstract fun registerModule(type: RegisteredModuleType, builder: ModuleBuilder<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.registerModule","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/register-module.html","searchKeys":["registerModule","abstract fun registerModule(type: RegisteredModuleType, builder: ModuleBuilder<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.registerModule"]},{"name":"abstract fun registerModules(container: ModuleContainer<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.registerModules","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/register-modules.html","searchKeys":["registerModules","abstract fun registerModules(container: ModuleContainer<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.registerModules"]},{"name":"abstract fun registerType(index: Int): RegisterType","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.registerType","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/register-type.html","searchKeys":["registerType","abstract fun registerType(index: Int): RegisterType","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.registerType"]},{"name":"abstract fun reset()","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.reset","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/reset.html","searchKeys":["reset","abstract fun reset()","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.reset"]},{"name":"abstract fun select(population: MutableList<Program<TProgram, TOutput>>): List<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.SelectionOperator.select","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-selection-operator/select.html","searchKeys":["select","abstract fun select(population: MutableList<Program<TProgram, TOutput>>): List<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.operators.selection.SelectionOperator.select"]},{"name":"abstract fun solve(): Solution<TProgram>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.solve","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/solve.html","searchKeys":["solve","abstract fun solve(): Solution<TProgram>","nz.co.jedsimson.lgp.core.evolution.Problem.solve"]},{"name":"abstract fun subscribeToUpdates(callback: (TMessage) -> Unit)","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingJob.subscribeToUpdates","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-job/subscribe-to-updates.html","searchKeys":["subscribeToUpdates","abstract fun subscribeToUpdates(callback: (TMessage) -> Unit)","nz.co.jedsimson.lgp.core.evolution.training.TrainingJob.subscribeToUpdates"]},{"name":"abstract fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.test","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-model/test.html","searchKeys":["test","abstract fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.test"]},{"name":"abstract fun toString(operands: List<RegisterIndex>, destination: RegisterIndex): String","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/to-string.html","searchKeys":["toString","abstract fun toString(operands: List<RegisterIndex>, destination: RegisterIndex): String","nz.co.jedsimson.lgp.core.program.instructions.Operation.toString"]},{"name":"abstract fun trace(message: () -> Any?)","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger.trace","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/trace.html","searchKeys":["trace","abstract fun trace(message: () -> Any?)","nz.co.jedsimson.lgp.core.environment.logging.Logger.trace"]},{"name":"abstract fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-model/train.html","searchKeys":["train","abstract fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.train"]},{"name":"abstract fun train(dataset: Dataset<TProgram, TTarget>): TrainingResult<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.Trainer.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-trainer/train.html","searchKeys":["train","abstract fun train(dataset: Dataset<TProgram, TTarget>): TrainingResult<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.Trainer.train"]},{"name":"abstract fun translate(program: Program<TProgram, TOutput>): String","description":"nz.co.jedsimson.lgp.core.program.ProgramTranslator.translate","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-translator/translate.html","searchKeys":["translate","abstract fun translate(program: Program<TProgram, TOutput>): String","nz.co.jedsimson.lgp.core.program.ProgramTranslator.translate"]},{"name":"abstract fun warn(message: () -> Any?)","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger.warn","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/warn.html","searchKeys":["warn","abstract fun warn(message: () -> Any?)","nz.co.jedsimson.lgp.core.environment.logging.Logger.warn"]},{"name":"abstract fun writeInstance(data: Sample<TData>)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.writeInstance","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/write-instance.html","searchKeys":["writeInstance","abstract fun writeInstance(data: Sample<TData>)","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.writeInstance"]},{"name":"abstract fun writeResultsFrom(source: ResultAggregator<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProvider.writeResultsFrom","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-provider/write-results-from.html","searchKeys":["writeResultsFrom","abstract fun writeResultsFrom(source: ResultAggregator<T>)","nz.co.jedsimson.lgp.core.evolution.ResultOutputProvider.writeResultsFrom"]},{"name":"abstract operator fun get(index: Int): TData","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.get","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/get.html","searchKeys":["get","abstract operator fun get(index: Int): TData","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.get"]},{"name":"abstract operator fun set(index: Int, value: TData)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.set","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/set.html","searchKeys":["set","abstract operator fun set(index: Int, value: TData)","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.set"]},{"name":"abstract suspend fun result(): TrainingResult<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingJob.result","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-job/result.html","searchKeys":["result","abstract suspend fun result(): TrainingResult<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.TrainingJob.result"]},{"name":"abstract suspend fun trainAsync(dataset: Dataset<TProgram, TTarget>): TrainingJob<TProgram, TOutput, TTarget, TMessage>","description":"nz.co.jedsimson.lgp.core.evolution.training.Trainer.trainAsync","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-trainer/train-async.html","searchKeys":["trainAsync","abstract suspend fun trainAsync(dataset: Dataset<TProgram, TTarget>): TrainingJob<TProgram, TOutput, TTarget, TMessage>","nz.co.jedsimson.lgp.core.evolution.training.Trainer.trainAsync"]},{"name":"abstract val arity: Arity","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation.arity","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/arity.html","searchKeys":["arity","abstract val arity: Arity","nz.co.jedsimson.lgp.core.program.instructions.Operation.arity"]},{"name":"abstract val calculationRegisters: IntRange","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.calculationRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/calculation-registers.html","searchKeys":["calculationRegisters","abstract val calculationRegisters: IntRange","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.calculationRegisters"]},{"name":"abstract val component: TComponent","description":"nz.co.jedsimson.lgp.core.environment.ComponentProvider.component","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-provider/component.html","searchKeys":["component","abstract val component: TComponent","nz.co.jedsimson.lgp.core.environment.ComponentProvider.component"]},{"name":"abstract val configLoader: ConfigurationLoader","description":"nz.co.jedsimson.lgp.core.evolution.Problem.configLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/config-loader.html","searchKeys":["configLoader","abstract val configLoader: ConfigurationLoader","nz.co.jedsimson.lgp.core.evolution.Problem.configLoader"]},{"name":"abstract val configuration: Configuration","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.configuration","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/configuration.html","searchKeys":["configuration","abstract val configuration: Configuration","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.configuration"]},{"name":"abstract val constantLoader: ConstantLoader<TProgram>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.constantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/constant-loader.html","searchKeys":["constantLoader","abstract val constantLoader: ConstantLoader<TProgram>","nz.co.jedsimson.lgp.core.evolution.Problem.constantLoader"]},{"name":"abstract val constantRegisters: IntRange","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.constantRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/constant-registers.html","searchKeys":["constantRegisters","abstract val constantRegisters: IntRange","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.constantRegisters"]},{"name":"abstract val constants: List<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.constants","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/constants.html","searchKeys":["constants","abstract val constants: List<TProgram>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.constants"]},{"name":"abstract val count: Int","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.count","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/count.html","searchKeys":["count","abstract val count: Int","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.count"]},{"name":"abstract val defaultValueProvider: DefaultValueProvider<TProgram>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.defaultValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/default-value-provider.html","searchKeys":["defaultValueProvider","abstract val defaultValueProvider: DefaultValueProvider<TProgram>","nz.co.jedsimson.lgp.core.evolution.Problem.defaultValueProvider"]},{"name":"abstract val description: Description","description":"nz.co.jedsimson.lgp.core.evolution.Problem.description","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/description.html","searchKeys":["description","abstract val description: Description","nz.co.jedsimson.lgp.core.evolution.Problem.description"]},{"name":"abstract val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.fitnessFunctionProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/fitness-function-provider.html","searchKeys":["fitnessFunctionProvider","abstract val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.fitnessFunctionProvider"]},{"name":"abstract val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.fitnessFunctionProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/fitness-function-provider.html","searchKeys":["fitnessFunctionProvider","abstract val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.Problem.fitnessFunctionProvider"]},{"name":"abstract val function: Function<TData>","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation.function","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/function.html","searchKeys":["function","abstract val function: Function<TData>","nz.co.jedsimson.lgp.core.program.instructions.Operation.function"]},{"name":"abstract val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.modules.Module.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module/information.html","searchKeys":["information","abstract val information: ModuleInformation","nz.co.jedsimson.lgp.core.modules.Module.information"]},{"name":"abstract val inputRegisters: IntRange","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet.inputRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/input-registers.html","searchKeys":["inputRegisters","abstract val inputRegisters: IntRange","nz.co.jedsimson.lgp.core.program.registers.RegisterSet.inputRegisters"]},{"name":"abstract val isValid: Boolean","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.isValid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/is-valid.html","searchKeys":["isValid","abstract val isValid: Boolean","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.isValid"]},{"name":"abstract val loggerProvider: LoggerProvider","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.loggerProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/logger-provider.html","searchKeys":["loggerProvider","abstract val loggerProvider: LoggerProvider","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.loggerProvider"]},{"name":"abstract val moduleFactory: ModuleFactory<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.moduleFactory","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/module-factory.html","searchKeys":["moduleFactory","abstract val moduleFactory: ModuleFactory<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.moduleFactory"]},{"name":"abstract val name: String","description":"nz.co.jedsimson.lgp.core.evolution.Problem.name","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/name.html","searchKeys":["name","abstract val name: String","nz.co.jedsimson.lgp.core.evolution.Problem.name"]},{"name":"abstract val number: Int","description":"nz.co.jedsimson.lgp.core.program.instructions.Arity.number","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-arity/number.html","searchKeys":["number","abstract val number: Int","nz.co.jedsimson.lgp.core.program.instructions.Arity.number"]},{"name":"abstract val operationLoader: OperationLoader<TProgram>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.operationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/operation-loader.html","searchKeys":["operationLoader","abstract val operationLoader: OperationLoader<TProgram>","nz.co.jedsimson.lgp.core.evolution.Problem.operationLoader"]},{"name":"abstract val operations: List<Operation<TProgram>>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.operations","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/operations.html","searchKeys":["operations","abstract val operations: List<Operation<TProgram>>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.operations"]},{"name":"abstract val outputRegisterIndices: List<RegisterIndex>","description":"nz.co.jedsimson.lgp.core.program.Program.outputRegisterIndices","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/output-register-indices.html","searchKeys":["outputRegisterIndices","abstract val outputRegisterIndices: List<RegisterIndex>","nz.co.jedsimson.lgp.core.program.Program.outputRegisterIndices"]},{"name":"abstract val problem: String","description":"nz.co.jedsimson.lgp.core.evolution.Solution.problem","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-solution/problem.html","searchKeys":["problem","abstract val problem: String","nz.co.jedsimson.lgp.core.evolution.Solution.problem"]},{"name":"abstract val randomState: Random","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.randomState","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/random-state.html","searchKeys":["randomState","abstract val randomState: Random","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.randomState"]},{"name":"abstract val registerSet: RegisterSet<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.registerSet","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/register-set.html","searchKeys":["registerSet","abstract val registerSet: RegisterSet<TProgram>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.registerSet"]},{"name":"abstract val registeredModules: ModuleContainer<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.registeredModules","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/registered-modules.html","searchKeys":["registeredModules","abstract val registeredModules: ModuleContainer<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.Problem.registeredModules"]},{"name":"abstract val registers: RegisterSet<TData>","description":"nz.co.jedsimson.lgp.core.program.Program.registers","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/registers.html","searchKeys":["registers","abstract val registers: RegisterSet<TData>","nz.co.jedsimson.lgp.core.program.Program.registers"]},{"name":"abstract val representation: String","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation.representation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/representation.html","searchKeys":["representation","abstract val representation: String","nz.co.jedsimson.lgp.core.program.instructions.Operation.representation"]},{"name":"abstract val resultAggregator: ResultAggregator<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.resultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/result-aggregator.html","searchKeys":["resultAggregator","abstract val resultAggregator: ResultAggregator<TProgram>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade.resultAggregator"]},{"name":"abstract val results: List<ExportableResult<T>>","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregator.results","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregator/results.html","searchKeys":["results","abstract val results: List<ExportableResult<T>>","nz.co.jedsimson.lgp.core.evolution.ResultAggregator.results"]},{"name":"abstract val size: Int","description":"nz.co.jedsimson.lgp.core.environment.dataset.Target.size","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-target/size.html","searchKeys":["size","abstract val size: Int","nz.co.jedsimson.lgp.core.environment.dataset.Target.size"]},{"name":"abstract val value: TValue","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProvider.value","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-provider/value.html","searchKeys":["value","abstract val value: TValue","nz.co.jedsimson.lgp.core.environment.DefaultValueProvider.value"]},{"name":"abstract var destination: RegisterIndex","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction.destination","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/destination.html","searchKeys":["destination","abstract var destination: RegisterIndex","nz.co.jedsimson.lgp.core.program.instructions.Instruction.destination"]},{"name":"abstract var instructions: MutableList<Instruction<TData>>","description":"nz.co.jedsimson.lgp.core.program.Program.instructions","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/instructions.html","searchKeys":["instructions","abstract var instructions: MutableList<Instruction<TData>>","nz.co.jedsimson.lgp.core.program.Program.instructions"]},{"name":"abstract var operands: MutableList<RegisterIndex>","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction.operands","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/operands.html","searchKeys":["operands","abstract var operands: MutableList<RegisterIndex>","nz.co.jedsimson.lgp.core.program.instructions.Instruction.operands"]},{"name":"abstract var operation: Operation<TData>","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction.operation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/operation.html","searchKeys":["operation","abstract var operation: Operation<TData>","nz.co.jedsimson.lgp.core.program.instructions.Instruction.operation"]},{"name":"class Arguments<TData>(arguments: List<Argument<TData>>)","description":"nz.co.jedsimson.lgp.core.program.registers.Arguments","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-arguments/index.html","searchKeys":["Arguments","class Arguments<TData>(arguments: List<Argument<TData>>)","nz.co.jedsimson.lgp.core.program.registers.Arguments"]},{"name":"class ArityException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.program.instructions.ArityException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-arity-exception/index.html","searchKeys":["ArityException","class ArityException(message: String) : Exception","nz.co.jedsimson.lgp.core.program.instructions.ArityException"]},{"name":"class ArrayRegisterSet<TData> : RegisterSet<TData> ","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/index.html","searchKeys":["ArrayRegisterSet","class ArrayRegisterSet<TData> : RegisterSet<TData> ","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet"]},{"name":"class BinaryTournamentSelection<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int) : SelectionOperator<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-binary-tournament-selection/index.html","searchKeys":["BinaryTournamentSelection","class BinaryTournamentSelection<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int) : SelectionOperator<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection"]},{"name":"class BufferedResultAggregator<T>(outputProvider: ResultOutputProviders.CsvResultOutputProvider<T>, bufferSize: Int, verbose: Boolean) : ResultAggregator<T> ","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/index.html","searchKeys":["BufferedResultAggregator","class BufferedResultAggregator<T>(outputProvider: ResultOutputProviders.CsvResultOutputProvider<T>, bufferSize: Int, verbose: Boolean) : ResultAggregator<T> ","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator"]},{"name":"class Builder : ComponentLoaderBuilder<JsonConfigurationLoader> ","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/-builder/index.html","searchKeys":["Builder","class Builder : ComponentLoaderBuilder<JsonConfigurationLoader> ","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder"]},{"name":"class Builder<U> : ComponentLoaderBuilder<DefaultOperationLoader<U>> ","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/-builder/index.html","searchKeys":["Builder","class Builder<U> : ComponentLoaderBuilder<DefaultOperationLoader<U>> ","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder"]},{"name":"class Builder<U> : ComponentLoaderBuilder<GenericConstantLoader<U>> ","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/index.html","searchKeys":["Builder","class Builder<U> : ComponentLoaderBuilder<GenericConstantLoader<U>> ","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder"]},{"name":"class Builder<UData, UTarget : Target<UData>> : ComponentLoaderBuilder<CsvDatasetLoader<UData, UTarget>> ","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/index.html","searchKeys":["Builder","class Builder<UData, UTarget : Target<UData>> : ComponentLoaderBuilder<CsvDatasetLoader<UData, UTarget>> ","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder"]},{"name":"class ComponentLoadException(message: String, innerException: Exception?) : Exception","description":"nz.co.jedsimson.lgp.core.environment.ComponentLoadException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-load-exception/index.html","searchKeys":["ComponentLoadException","class ComponentLoadException(message: String, innerException: Exception?) : Exception","nz.co.jedsimson.lgp.core.environment.ComponentLoadException"]},{"name":"class Configuration","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/index.html","searchKeys":["Configuration","class Configuration","nz.co.jedsimson.lgp.core.environment.config.Configuration"]},{"name":"class CsvDatasetLoader<TData, TTarget : Target<TData>>(reader: Reader, featureParseFunction: (Header, Row) -> Sample<TData>, targetParseFunction: (Header, Row) -> TTarget) : DatasetLoader<TData, TTarget> ","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/index.html","searchKeys":["CsvDatasetLoader","class CsvDatasetLoader<TData, TTarget : Target<TData>>(reader: Reader, featureParseFunction: (Header, Row) -> Sample<TData>, targetParseFunction: (Header, Row) -> TTarget) : DatasetLoader<TData, TTarget> ","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader"]},{"name":"class CsvResultOutputProvider<T>(filename: String) : ResultOutputProvider<T> ","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.CsvResultOutputProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/-csv-result-output-provider/index.html","searchKeys":["CsvResultOutputProvider","class CsvResultOutputProvider<T>(filename: String) : ResultOutputProvider<T> ","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.CsvResultOutputProvider"]},{"name":"class Dataset<TData, TTarget : Target<TData>>(inputs: List<Sample<TData>>, outputs: List<TTarget>)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/index.html","searchKeys":["Dataset","class Dataset<TData, TTarget : Target<TData>>(inputs: List<Sample<TData>>, outputs: List<TTarget>)","nz.co.jedsimson.lgp.core.environment.dataset.Dataset"]},{"name":"class Debug(key: String, context: DiagnosticEventContext) : DiagnosticEvent","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Debug","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/-debug/index.html","searchKeys":["Debug","class Debug(key: String, context: DiagnosticEventContext) : DiagnosticEvent","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Debug"]},{"name":"class DefaultOperationLoader<T>(operationNames: List<String>) : OperationLoader<T> ","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/index.html","searchKeys":["DefaultOperationLoader","class DefaultOperationLoader<T>(operationNames: List<String>) : OperationLoader<T> ","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader"]},{"name":"class DefaultResultAggregator<T> : ResultAggregator<T> ","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/index.html","searchKeys":["DefaultResultAggregator","class DefaultResultAggregator<T> : ResultAggregator<T> ","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator"]},{"name":"class DistributedTrainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int) : Trainer<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-trainer/index.html","searchKeys":["DistributedTrainer","class DistributedTrainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int) : Trainer<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer"]},{"name":"class DistributedTrainingJob<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> : TrainingJob<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainingJob","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-training-job/index.html","searchKeys":["DistributedTrainingJob","class DistributedTrainingJob<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> : TrainingJob<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainingJob"]},{"name":"class DoubleConstantLoader(constants: List<String>) : GenericConstantLoader<Double> ","description":"nz.co.jedsimson.lgp.core.environment.constants.DoubleConstantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-double-constant-loader/index.html","searchKeys":["DoubleConstantLoader","class DoubleConstantLoader(constants: List<String>) : GenericConstantLoader<Double> ","nz.co.jedsimson.lgp.core.environment.constants.DoubleConstantLoader"]},{"name":"class Environment<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(specification: EnvironmentSpecification<TProgram, TOutput, TTarget>) : EnvironmentFacade<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.environment.Environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/index.html","searchKeys":["Environment","class Environment<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(specification: EnvironmentSpecification<TProgram, TOutput, TTarget>) : EnvironmentFacade<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.environment.Environment"]},{"name":"class FitnessEvaluator<TData, TOutput : Output<TData>, TTarget : Target<TData>>(environment: EnvironmentFacade<TData, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessEvaluator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-evaluator/index.html","searchKeys":["FitnessEvaluator","class FitnessEvaluator<TData, TOutput : Output<TData>, TTarget : Target<TData>>(environment: EnvironmentFacade<TData, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessEvaluator"]},{"name":"class InMemoryResultAggregator<T> : ResultAggregator<T> ","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/index.html","searchKeys":["InMemoryResultAggregator","class InMemoryResultAggregator<T> : ResultAggregator<T> ","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator"]},{"name":"class Invalid(reason: String) : ConfigurationValidity","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-invalid/index.html","searchKeys":["Invalid","class Invalid(reason: String) : ConfigurationValidity","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid"]},{"name":"class InvalidConfigurationException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.environment.config.InvalidConfigurationException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-invalid-configuration-exception/index.html","searchKeys":["InvalidConfigurationException","class InvalidConfigurationException(message: String) : Exception","nz.co.jedsimson.lgp.core.environment.config.InvalidConfigurationException"]},{"name":"class InvalidCsvFileException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.environment.dataset.InvalidCsvFileException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-invalid-csv-file-exception/index.html","searchKeys":["InvalidCsvFileException","class InvalidCsvFileException(message: String) : Exception","nz.co.jedsimson.lgp.core.environment.dataset.InvalidCsvFileException"]},{"name":"class InvalidModuleException(message: String?) : Exception","description":"nz.co.jedsimson.lgp.core.modules.InvalidModuleException","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-invalid-module-exception/index.html","searchKeys":["InvalidModuleException","class InvalidModuleException(message: String?) : Exception","nz.co.jedsimson.lgp.core.modules.InvalidModuleException"]},{"name":"class InvalidOperationSpecificationException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.environment.operations.InvalidOperationSpecificationException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-invalid-operation-specification-exception/index.html","searchKeys":["InvalidOperationSpecificationException","class InvalidOperationSpecificationException(message: String) : Exception","nz.co.jedsimson.lgp.core.environment.operations.InvalidOperationSpecificationException"]},{"name":"class IslandMigration<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, options: IslandMigration.IslandMigrationOptions) : EvolutionModel<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/index.html","searchKeys":["IslandMigration","class IslandMigration<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, options: IslandMigration.IslandMigrationOptions) : EvolutionModel<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration"]},{"name":"class IslandMigrationOptions","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/-island-migration-options/index.html","searchKeys":["IslandMigrationOptions","class IslandMigrationOptions","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions"]},{"name":"class JsonConfigurationLoader(filename: String) : ConfigurationLoader","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/index.html","searchKeys":["JsonConfigurationLoader","class JsonConfigurationLoader(filename: String) : ConfigurationLoader","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader"]},{"name":"class LinearCrossover<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, maximumSegmentLength: Int, maximumCrossoverDistance: Int, maximumSegmentLengthDifference: Int) : RecombinationOperator<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover/-linear-crossover/index.html","searchKeys":["LinearCrossover","class LinearCrossover<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, maximumSegmentLength: Int, maximumCrossoverDistance: Int, maximumSegmentLengthDifference: Int) : RecombinationOperator<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover"]},{"name":"class LoggerProvider","description":"nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger-provider/index.html","searchKeys":["LoggerProvider","class LoggerProvider","nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider"]},{"name":"class MacroMutationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, insertionRate: Double, deletionRate: Double, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>) : MutationOperator<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro/-macro-mutation-operator/index.html","searchKeys":["MacroMutationOperator","class MacroMutationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, insertionRate: Double, deletionRate: Double, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>) : MutationOperator<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator"]},{"name":"class MasterSlave<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : EvolutionModel<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/index.html","searchKeys":["MasterSlave","class MasterSlave<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : EvolutionModel<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave"]},{"name":"class MemoizedComponentProvider<out TComponent>(componentName: String, componentInitialisationFunction: (logger: Logger) -> TComponent) : ComponentProvider<TComponent> ","description":"nz.co.jedsimson.lgp.core.environment.MemoizedComponentProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-memoized-component-provider/index.html","searchKeys":["MemoizedComponentProvider","class MemoizedComponentProvider<out TComponent>(componentName: String, componentInitialisationFunction: (logger: Logger) -> TComponent) : ComponentProvider<TComponent> ","nz.co.jedsimson.lgp.core.environment.MemoizedComponentProvider"]},{"name":"class MicroMutationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, registerMutationRate: Double, operatorMutationRate: Double, constantMutationFunc: ConstantMutationFunction<TProgram>, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>) : MutationOperator<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-micro-mutation-operator/index.html","searchKeys":["MicroMutationOperator","class MicroMutationOperator<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, registerMutationRate: Double, operatorMutationRate: Double, constantMutationFunc: ConstantMutationFunction<TProgram>, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>) : MutationOperator<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator"]},{"name":"class MissingModuleException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.modules.MissingModuleException","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-missing-module-exception/index.html","searchKeys":["MissingModuleException","class MissingModuleException(message: String) : Exception","nz.co.jedsimson.lgp.core.modules.MissingModuleException"]},{"name":"class ModuleCastException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.modules.ModuleCastException","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-cast-exception/index.html","searchKeys":["ModuleCastException","class ModuleCastException(message: String) : Exception","nz.co.jedsimson.lgp.core.modules.ModuleCastException"]},{"name":"class Multiple<TData>(values: List<TData>) : Output<TData> ","description":"nz.co.jedsimson.lgp.core.program.Outputs.Multiple","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/-multiple/index.html","searchKeys":["Multiple","class Multiple<TData>(values: List<TData>) : Output<TData> ","nz.co.jedsimson.lgp.core.program.Outputs.Multiple"]},{"name":"class Multiple<TData>(values: List<TData>) : Target<TData> ","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-multiple/index.html","searchKeys":["Multiple","class Multiple<TData>(values: List<TData>) : Target<TData> ","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple"]},{"name":"class MultipleOutputFitnessContext<TData>(environment: EnvironmentFacade<TData, Outputs.Multiple<TData>, Targets.Multiple<TData>>) : BaseFitnessContext<TData, Outputs.Multiple<TData>, Targets.Multiple<TData>> ","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.MultipleOutputFitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/-multiple-output-fitness-context/index.html","searchKeys":["MultipleOutputFitnessContext","class MultipleOutputFitnessContext<TData>(environment: EnvironmentFacade<TData, Outputs.Multiple<TData>, Targets.Multiple<TData>>) : BaseFitnessContext<TData, Outputs.Multiple<TData>, Targets.Multiple<TData>> ","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.MultipleOutputFitnessContext"]},{"name":"class NominalFeature<TData>(name: String, value: TData, labels: List<String>) : Feature<TData> ","description":"nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-nominal-feature/index.html","searchKeys":["NominalFeature","class NominalFeature<TData>(name: String, value: TData, labels: List<String>) : Feature<TData> ","nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature"]},{"name":"class ProblemNotInitialisedException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.evolution.ProblemNotInitialisedException","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem-not-initialised-exception/index.html","searchKeys":["ProblemNotInitialisedException","class ProblemNotInitialisedException(message: String) : Exception","nz.co.jedsimson.lgp.core.evolution.ProblemNotInitialisedException"]},{"name":"class ProgressUpdate<TProgram, TOutput : Output<TProgram>>(progress: Double, result: EvolutionResult<TProgram, TOutput>?) : TrainingUpdateMessage","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-messages/-progress-update/index.html","searchKeys":["ProgressUpdate","class ProgressUpdate<TProgram, TOutput : Output<TProgram>>(progress: Double, result: EvolutionResult<TProgram, TOutput>?) : TrainingUpdateMessage","nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate"]},{"name":"class RandomRegisterGenerator<T>(randomState: Random, registerSet: RegisterSet<T>)","description":"nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-random-register-generator/index.html","searchKeys":["RandomRegisterGenerator","class RandomRegisterGenerator<T>(randomState: Random, registerSet: RegisterSet<T>)","nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator"]},{"name":"class RawResultTableOutputProvider<T>(filename: String) : ResultOutputProvider<T> ","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.RawResultTableOutputProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/-raw-result-table-output-provider/index.html","searchKeys":["RawResultTableOutputProvider","class RawResultTableOutputProvider<T>(filename: String) : ResultOutputProvider<T> ","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.RawResultTableOutputProvider"]},{"name":"class Register<T>(value: T, index: RegisterIndex)","description":"nz.co.jedsimson.lgp.core.program.registers.Register","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/index.html","searchKeys":["Register","class Register<T>(value: T, index: RegisterIndex)","nz.co.jedsimson.lgp.core.program.registers.Register"]},{"name":"class RegisterAccessException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterAccessException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-access-exception/index.html","searchKeys":["RegisterAccessException","class RegisterAccessException(message: String) : Exception","nz.co.jedsimson.lgp.core.program.registers.RegisterAccessException"]},{"name":"class RegisterReadException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterReadException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-read-exception/index.html","searchKeys":["RegisterReadException","class RegisterReadException(message: String) : Exception","nz.co.jedsimson.lgp.core.program.registers.RegisterReadException"]},{"name":"class RegisterSetInitialisationException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSetInitialisationException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set-initialisation-exception/index.html","searchKeys":["RegisterSetInitialisationException","class RegisterSetInitialisationException(message: String) : Exception","nz.co.jedsimson.lgp.core.program.registers.RegisterSetInitialisationException"]},{"name":"class RegisterWriteRangeException(message: String) : Exception","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterWriteRangeException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-write-range-exception/index.html","searchKeys":["RegisterWriteRangeException","class RegisterWriteRangeException(message: String) : Exception","nz.co.jedsimson.lgp.core.program.registers.RegisterWriteRangeException"]},{"name":"class ResultAggregators","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/index.html","searchKeys":["ResultAggregators","class ResultAggregators","nz.co.jedsimson.lgp.core.evolution.ResultAggregators"]},{"name":"class RunBasedExportableResult<T>(run: Int, statistics: EvolutionStatistics) : ExportableResult<T> ","description":"nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-run-based-exportable-result/index.html","searchKeys":["RunBasedExportableResult","class RunBasedExportableResult<T>(run: Int, statistics: EvolutionStatistics) : ExportableResult<T> ","nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult"]},{"name":"class Sample<TData>(features: List<Feature<TData>>)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Sample","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sample/index.html","searchKeys":["Sample","class Sample<TData>(features: List<Feature<TData>>)","nz.co.jedsimson.lgp.core.environment.dataset.Sample"]},{"name":"class SequenceGenerator","description":"nz.co.jedsimson.lgp.core.environment.dataset.SequenceGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sequence-generator/index.html","searchKeys":["SequenceGenerator","class SequenceGenerator","nz.co.jedsimson.lgp.core.environment.dataset.SequenceGenerator"]},{"name":"class SequentialTrainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int) : Trainer<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-trainer/index.html","searchKeys":["SequentialTrainer","class SequentialTrainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int) : Trainer<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer"]},{"name":"class SequentialTrainingJob<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> : TrainingJob<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainingJob","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-training-job/index.html","searchKeys":["SequentialTrainingJob","class SequentialTrainingJob<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> : TrainingJob<TProgram, TOutput, TTarget, TrainingMessages.ProgressUpdate<TProgram, TOutput>> ","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainingJob"]},{"name":"class Single<TData>(value: TData) : Output<TData> ","description":"nz.co.jedsimson.lgp.core.program.Outputs.Single","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/-single/index.html","searchKeys":["Single","class Single<TData>(value: TData) : Output<TData> ","nz.co.jedsimson.lgp.core.program.Outputs.Single"]},{"name":"class Single<TData>(value: TData) : Target<TData> ","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-single/index.html","searchKeys":["Single","class Single<TData>(value: TData) : Target<TData> ","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single"]},{"name":"class SingleOutputFitnessContext<TData>(environment: EnvironmentFacade<TData, Outputs.Single<TData>, Targets.Single<TData>>) : BaseFitnessContext<TData, Outputs.Single<TData>, Targets.Single<TData>> ","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.SingleOutputFitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/-single-output-fitness-context/index.html","searchKeys":["SingleOutputFitnessContext","class SingleOutputFitnessContext<TData>(environment: EnvironmentFacade<TData, Outputs.Single<TData>, Targets.Single<TData>>) : BaseFitnessContext<TData, Outputs.Single<TData>, Targets.Single<TData>> ","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.SingleOutputFitnessContext"]},{"name":"class SteadyState<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : EvolutionModel<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/index.html","searchKeys":["SteadyState","class SteadyState<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>) : EvolutionModel<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.model.SteadyState"]},{"name":"class TournamentSelection<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int, numberOfOffspring: Int, removeWinnersFromPopulation: Boolean) : SelectionOperator<TProgram, TOutput, TTarget> ","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-tournament-selection/index.html","searchKeys":["TournamentSelection","class TournamentSelection<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int, numberOfOffspring: Int, removeWinnersFromPopulation: Boolean) : SelectionOperator<TProgram, TOutput, TTarget> ","nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection"]},{"name":"class Trace(key: String, context: DiagnosticEventContext) : DiagnosticEvent","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Trace","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/-trace/index.html","searchKeys":["Trace","class Trace(key: String, context: DiagnosticEventContext) : DiagnosticEvent","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Trace"]},{"name":"class UniformlyDistributedGenerator(randomState: Random)","description":"nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-uniformly-distributed-generator/index.html","searchKeys":["UniformlyDistributedGenerator","class UniformlyDistributedGenerator(randomState: Random)","nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator"]},{"name":"class Valid : ConfigurationValidity","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Valid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-valid/index.html","searchKeys":["Valid","class Valid : ConfigurationValidity","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Valid"]},{"name":"const val UNDEFINED_FITNESS: Double = 10e9","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.UNDEFINED_FITNESS","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/-u-n-d-e-f-i-n-e-d_-f-i-t-n-e-s-s.html","searchKeys":["UNDEFINED_FITNESS","const val UNDEFINED_FITNESS: Double = 10e9","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.UNDEFINED_FITNESS"]},{"name":"data class Argument<out T>(value: T)","description":"nz.co.jedsimson.lgp.core.program.registers.Argument","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-argument/index.html","searchKeys":["Argument","data class Argument<out T>(value: T)","nz.co.jedsimson.lgp.core.program.registers.Argument"]},{"name":"data class Description(description: String)","description":"nz.co.jedsimson.lgp.core.evolution.Description","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-description/index.html","searchKeys":["Description","data class Description(description: String)","nz.co.jedsimson.lgp.core.evolution.Description"]},{"name":"data class EnvironmentSpecification<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(configurationLoader: ConfigurationLoader, constantLoader: ConstantLoader<TProgram>, operationLoader: OperationLoader<TProgram>, defaultValueProvider: DefaultValueProvider<TProgram>, fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>, resultAggregator: ResultAggregator<TProgram>?, randomStateSeed: Long?)","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/index.html","searchKeys":["EnvironmentSpecification","data class EnvironmentSpecification<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(configurationLoader: ConfigurationLoader, constantLoader: ConstantLoader<TProgram>, operationLoader: OperationLoader<TProgram>, defaultValueProvider: DefaultValueProvider<TProgram>, fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>, resultAggregator: ResultAggregator<TProgram>?, randomStateSeed: Long?)","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification"]},{"name":"data class Evaluation<TProgram, TOutput : Output<TProgram>>(fitness: Double, individual: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-evaluation/index.html","searchKeys":["Evaluation","data class Evaluation<TProgram, TOutput : Output<TProgram>>(fitness: Double, individual: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation"]},{"name":"data class EvolutionStatistics(data: Map<String, Any>)","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionStatistics","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-statistics/index.html","searchKeys":["EvolutionStatistics","data class EvolutionStatistics(data: Map<String, Any>)","nz.co.jedsimson.lgp.core.evolution.model.EvolutionStatistics"]},{"name":"data class FitnessCase<TData, TTarget : Target<TData>>(features: Sample<TData>, target: TTarget)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-case/index.html","searchKeys":["FitnessCase","data class FitnessCase<TData, TTarget : Target<TData>>(features: Sample<TData>, target: TTarget)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase"]},{"name":"data class ModuleContainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(modules: MutableMap<RegisteredModuleType, ModuleBuilder<TProgram, TOutput, TTarget>>)","description":"nz.co.jedsimson.lgp.core.modules.ModuleContainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-container/index.html","searchKeys":["ModuleContainer","data class ModuleContainer<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(modules: MutableMap<RegisteredModuleType, ModuleBuilder<TProgram, TOutput, TTarget>>)","nz.co.jedsimson.lgp.core.modules.ModuleContainer"]},{"name":"data class ModuleInformation(description: String)","description":"nz.co.jedsimson.lgp.core.modules.ModuleInformation","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-information/index.html","searchKeys":["ModuleInformation","data class ModuleInformation(description: String)","nz.co.jedsimson.lgp.core.modules.ModuleInformation"]},{"name":"data class TestResult<TProgram, TOutput : Output<TProgram>>(predicted: List<TOutput>, expected: List<Target<TProgram>>)","description":"nz.co.jedsimson.lgp.core.evolution.model.TestResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-test-result/index.html","searchKeys":["TestResult","data class TestResult<TProgram, TOutput : Output<TProgram>>(predicted: List<TOutput>, expected: List<Target<TProgram>>)","nz.co.jedsimson.lgp.core.evolution.model.TestResult"]},{"name":"data class TrainingResult<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(evaluations: List<EvolutionResult<TProgram, TOutput>>, models: List<EvolutionModel<TProgram, TOutput, TTarget>>)","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-result/index.html","searchKeys":["TrainingResult","data class TrainingResult<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>(evaluations: List<EvolutionResult<TProgram, TOutput>>, models: List<EvolutionModel<TProgram, TOutput, TTarget>>)","nz.co.jedsimson.lgp.core.evolution.training.TrainingResult"]},{"name":"enum BaseArity : Enum<BaseArity> , Arity","description":"nz.co.jedsimson.lgp.core.program.instructions.BaseArity","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-base-arity/index.html","searchKeys":["BaseArity","enum BaseArity : Enum<BaseArity> , Arity","nz.co.jedsimson.lgp.core.program.instructions.BaseArity"]},{"name":"enum CoreModuleType : Enum<CoreModuleType> , RegisteredModuleType","description":"nz.co.jedsimson.lgp.core.modules.CoreModuleType","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-core-module-type/index.html","searchKeys":["CoreModuleType","enum CoreModuleType : Enum<CoreModuleType> , RegisteredModuleType","nz.co.jedsimson.lgp.core.modules.CoreModuleType"]},{"name":"enum RegisterType : Enum<RegisterType> ","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterType","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-type/index.html","searchKeys":["RegisterType","enum RegisterType : Enum<RegisterType> ","nz.co.jedsimson.lgp.core.program.registers.RegisterType"]},{"name":"fun <T, R> List<T>.pmap(transform: (T) -> R): List<R>","description":"nz.co.jedsimson.lgp.core.evolution.pmap","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/pmap.html","searchKeys":["pmap","fun <T, R> List<T>.pmap(transform: (T) -> R): List<R>","nz.co.jedsimson.lgp.core.evolution.pmap"]},{"name":"fun <T> BinaryOperation(function: (Arguments<T>) -> T, arity: BaseArity = BaseArity.Binary)","description":"nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation.BinaryOperation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-binary-operation/-binary-operation.html","searchKeys":["BinaryOperation","fun <T> BinaryOperation(function: (Arguments<T>) -> T, arity: BaseArity = BaseArity.Binary)","nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation.BinaryOperation"]},{"name":"fun <T> BufferedResultAggregator(outputProvider: ResultOutputProviders.CsvResultOutputProvider<T>, bufferSize: Int = 100, verbose: Boolean = false)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.BufferedResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/-buffered-result-aggregator.html","searchKeys":["BufferedResultAggregator","fun <T> BufferedResultAggregator(outputProvider: ResultOutputProviders.CsvResultOutputProvider<T>, bufferSize: Int = 100, verbose: Boolean = false)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.BufferedResultAggregator"]},{"name":"fun <T> List<T>.pairwise(): List<Pair<T, T>>","description":"nz.co.jedsimson.lgp.core.evolution.pairwise","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/pairwise.html","searchKeys":["pairwise","fun <T> List<T>.pairwise(): List<Pair<T, T>>","nz.co.jedsimson.lgp.core.evolution.pairwise"]},{"name":"fun <T> MutableList<T>.copy(): MutableList<T>","description":"nz.co.jedsimson.lgp.core.evolution.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/copy.html","searchKeys":["copy","fun <T> MutableList<T>.copy(): MutableList<T>","nz.co.jedsimson.lgp.core.evolution.copy"]},{"name":"fun <T> MutableList<T>.removeRange(range: IntRange)","description":"nz.co.jedsimson.lgp.core.evolution.removeRange","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/remove-range.html","searchKeys":["removeRange","fun <T> MutableList<T>.removeRange(range: IntRange)","nz.co.jedsimson.lgp.core.evolution.removeRange"]},{"name":"fun <T> Random.choice(list: List<T>): T","description":"nz.co.jedsimson.lgp.core.environment.choice","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/choice.html","searchKeys":["choice","fun <T> Random.choice(list: List<T>): T","nz.co.jedsimson.lgp.core.environment.choice"]},{"name":"fun <T> Random.sample(population: List<T>, k: Int): List<T>","description":"nz.co.jedsimson.lgp.core.environment.sample","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/sample.html","searchKeys":["sample","fun <T> Random.sample(population: List<T>, k: Int): List<T>","nz.co.jedsimson.lgp.core.environment.sample"]},{"name":"fun <T> RandomRegisterGenerator(randomState: Random, registerSet: RegisterSet<T>)","description":"nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.RandomRegisterGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-random-register-generator/-random-register-generator.html","searchKeys":["RandomRegisterGenerator","fun <T> RandomRegisterGenerator(randomState: Random, registerSet: RegisterSet<T>)","nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.RandomRegisterGenerator"]},{"name":"fun <T> Register(source: Register<T>)","description":"nz.co.jedsimson.lgp.core.program.registers.Register.Register","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/-register.html","searchKeys":["Register","fun <T> Register(source: Register<T>)","nz.co.jedsimson.lgp.core.program.registers.Register.Register"]},{"name":"fun <T> Register(value: T, index: RegisterIndex)","description":"nz.co.jedsimson.lgp.core.program.registers.Register.Register","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/-register.html","searchKeys":["Register","fun <T> Register(value: T, index: RegisterIndex)","nz.co.jedsimson.lgp.core.program.registers.Register.Register"]},{"name":"fun <T> UnaryOperation(function: (Arguments<T>) -> T, arity: BaseArity = BaseArity.Unary)","description":"nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation.UnaryOperation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-unary-operation/-unary-operation.html","searchKeys":["UnaryOperation","fun <T> UnaryOperation(function: (Arguments<T>) -> T, arity: BaseArity = BaseArity.Unary)","nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation.UnaryOperation"]},{"name":"fun <T> constantValueProvider(value: T): DefaultValueProvider<T>","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.constantValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-providers/constant-value-provider.html","searchKeys":["constantValueProvider","fun <T> constantValueProvider(value: T): DefaultValueProvider<T>","nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.constantValueProvider"]},{"name":"fun <T> identity(): ConstantMutationFunction<T>","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.ConstantMutationFunctions.identity","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-constant-mutation-functions/identity.html","searchKeys":["identity","fun <T> identity(): ConstantMutationFunction<T>","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.ConstantMutationFunctions.identity"]},{"name":"fun <T> lambdaValueProvider(func: () -> T): DefaultValueProvider<T>","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.lambdaValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-providers/lambda-value-provider.html","searchKeys":["lambdaValueProvider","fun <T> lambdaValueProvider(func: () -> T): DefaultValueProvider<T>","nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.lambdaValueProvider"]},{"name":"fun <TData, TOutput : Output<TData>, TTarget : Target<TData>> BaseFitnessContext(environment: EnvironmentFacade<TData, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.BaseFitnessContext.BaseFitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-base-fitness-context/-base-fitness-context.html","searchKeys":["BaseFitnessContext","fun <TData, TOutput : Output<TData>, TTarget : Target<TData>> BaseFitnessContext(environment: EnvironmentFacade<TData, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.fitness.BaseFitnessContext.BaseFitnessContext"]},{"name":"fun <TData, TOutput : Output<TData>, TTarget : Target<TData>> FitnessContext(environment: EnvironmentFacade<TData, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContext.FitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-context/-fitness-context.html","searchKeys":["FitnessContext","fun <TData, TOutput : Output<TData>, TTarget : Target<TData>> FitnessContext(environment: EnvironmentFacade<TData, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContext.FitnessContext"]},{"name":"fun <TData, TOutput : Output<TData>, TTarget : Target<TData>> FitnessEvaluator(environment: EnvironmentFacade<TData, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessEvaluator.FitnessEvaluator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-evaluator/-fitness-evaluator.html","searchKeys":["FitnessEvaluator","fun <TData, TOutput : Output<TData>, TTarget : Target<TData>> FitnessEvaluator(environment: EnvironmentFacade<TData, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessEvaluator.FitnessEvaluator"]},{"name":"fun <TData, TTarget : Target<TData>> CsvDatasetLoader(reader: Reader, featureParseFunction: (Header, Row) -> Sample<TData>, targetParseFunction: (Header, Row) -> TTarget)","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.CsvDatasetLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-csv-dataset-loader.html","searchKeys":["CsvDatasetLoader","fun <TData, TTarget : Target<TData>> CsvDatasetLoader(reader: Reader, featureParseFunction: (Header, Row) -> Sample<TData>, targetParseFunction: (Header, Row) -> TTarget)","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.CsvDatasetLoader"]},{"name":"fun <TData, TTarget : Target<TData>> Dataset(inputs: List<Sample<TData>>, outputs: List<TTarget>)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset.Dataset","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/-dataset.html","searchKeys":["Dataset","fun <TData, TTarget : Target<TData>> Dataset(inputs: List<Sample<TData>>, outputs: List<TTarget>)","nz.co.jedsimson.lgp.core.environment.dataset.Dataset.Dataset"]},{"name":"fun <TData, TTarget : Target<TData>> FitnessCase(features: Sample<TData>, target: TTarget)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase.FitnessCase","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-case/-fitness-case.html","searchKeys":["FitnessCase","fun <TData, TTarget : Target<TData>> FitnessCase(features: Sample<TData>, target: TTarget)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase.FitnessCase"]},{"name":"fun <TData> Arguments(arguments: List<Argument<TData>>)","description":"nz.co.jedsimson.lgp.core.program.registers.Arguments.Arguments","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-arguments/-arguments.html","searchKeys":["Arguments","fun <TData> Arguments(arguments: List<Argument<TData>>)","nz.co.jedsimson.lgp.core.program.registers.Arguments.Arguments"]},{"name":"fun <TData> ArrayRegisterSet(inputRegisters: Int, calculationRegisters: Int, constants: List<TData>, defaultValueProvider: DefaultValueProvider<TData>)","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.ArrayRegisterSet","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/-array-register-set.html","searchKeys":["ArrayRegisterSet","fun <TData> ArrayRegisterSet(inputRegisters: Int, calculationRegisters: Int, constants: List<TData>, defaultValueProvider: DefaultValueProvider<TData>)","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.ArrayRegisterSet"]},{"name":"fun <TData> Feature(name: String, value: TData)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Feature.Feature","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-feature/-feature.html","searchKeys":["Feature","fun <TData> Feature(name: String, value: TData)","nz.co.jedsimson.lgp.core.environment.dataset.Feature.Feature"]},{"name":"fun <TData> Multiple(values: List<TData>)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple.Multiple","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-multiple/-multiple.html","searchKeys":["Multiple","fun <TData> Multiple(values: List<TData>)","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple.Multiple"]},{"name":"fun <TData> Multiple(values: List<TData>)","description":"nz.co.jedsimson.lgp.core.program.Outputs.Multiple.Multiple","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/-multiple/-multiple.html","searchKeys":["Multiple","fun <TData> Multiple(values: List<TData>)","nz.co.jedsimson.lgp.core.program.Outputs.Multiple.Multiple"]},{"name":"fun <TData> MultipleOutputFitnessContext(environment: EnvironmentFacade<TData, Outputs.Multiple<TData>, Targets.Multiple<TData>>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.MultipleOutputFitnessContext.MultipleOutputFitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/-multiple-output-fitness-context/-multiple-output-fitness-context.html","searchKeys":["MultipleOutputFitnessContext","fun <TData> MultipleOutputFitnessContext(environment: EnvironmentFacade<TData, Outputs.Multiple<TData>, Targets.Multiple<TData>>)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.MultipleOutputFitnessContext.MultipleOutputFitnessContext"]},{"name":"fun <TData> NominalFeature(name: String, value: TData, labels: List<String>)","description":"nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature.NominalFeature","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-nominal-feature/-nominal-feature.html","searchKeys":["NominalFeature","fun <TData> NominalFeature(name: String, value: TData, labels: List<String>)","nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature.NominalFeature"]},{"name":"fun <TData> Sample(features: List<Feature<TData>>)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Sample.Sample","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sample/-sample.html","searchKeys":["Sample","fun <TData> Sample(features: List<Feature<TData>>)","nz.co.jedsimson.lgp.core.environment.dataset.Sample.Sample"]},{"name":"fun <TData> Single(value: TData)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single.Single","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-single/-single.html","searchKeys":["Single","fun <TData> Single(value: TData)","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single.Single"]},{"name":"fun <TData> Single(value: TData)","description":"nz.co.jedsimson.lgp.core.program.Outputs.Single.Single","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/-single/-single.html","searchKeys":["Single","fun <TData> Single(value: TData)","nz.co.jedsimson.lgp.core.program.Outputs.Single.Single"]},{"name":"fun <TData> SingleOutputFitnessContext(environment: EnvironmentFacade<TData, Outputs.Single<TData>, Targets.Single<TData>>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.SingleOutputFitnessContext.SingleOutputFitnessContext","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/-single-output-fitness-context/-single-output-fitness-context.html","searchKeys":["SingleOutputFitnessContext","fun <TData> SingleOutputFitnessContext(environment: EnvironmentFacade<TData, Outputs.Single<TData>, Targets.Single<TData>>)","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.SingleOutputFitnessContext.SingleOutputFitnessContext"]},{"name":"fun <TEvent : Event> register(eventClass: KClass<out TEvent>, listener: EventListener<TEvent>)","description":"nz.co.jedsimson.lgp.core.environment.events.EventRegistry.register","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-registry/register.html","searchKeys":["register","fun <TEvent : Event> register(eventClass: KClass<out TEvent>, listener: EventListener<TEvent>)","nz.co.jedsimson.lgp.core.environment.events.EventRegistry.register"]},{"name":"fun <TModule : Module> instanceUnsafe(type: RegisteredModuleType): TModule","description":"nz.co.jedsimson.lgp.core.modules.ModuleFactory.instanceUnsafe","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-factory/instance-unsafe.html","searchKeys":["instanceUnsafe","fun <TModule : Module> instanceUnsafe(type: RegisteredModuleType): TModule","nz.co.jedsimson.lgp.core.modules.ModuleFactory.instanceUnsafe"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> BinaryTournamentSelection(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int)","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection.BinaryTournamentSelection","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-binary-tournament-selection/-binary-tournament-selection.html","searchKeys":["BinaryTournamentSelection","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> BinaryTournamentSelection(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int)","nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection.BinaryTournamentSelection"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> DistributedTrainer(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int)","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.DistributedTrainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-trainer/-distributed-trainer.html","searchKeys":["DistributedTrainer","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> DistributedTrainer(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int)","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.DistributedTrainer"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> Environment(specification: EnvironmentSpecification<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.environment.Environment.Environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/-environment.html","searchKeys":["Environment","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> Environment(specification: EnvironmentSpecification<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.environment.Environment.Environment"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> EvolutionModel(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.EvolutionModel","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-model/-evolution-model.html","searchKeys":["EvolutionModel","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> EvolutionModel(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.model.EvolutionModel.EvolutionModel"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> InstructionGenerator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.InstructionGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction-generator/-instruction-generator.html","searchKeys":["InstructionGenerator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> InstructionGenerator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.InstructionGenerator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> IslandMigration(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, options: IslandMigration.IslandMigrationOptions)","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigration","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/-island-migration.html","searchKeys":["IslandMigration","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> IslandMigration(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, options: IslandMigration.IslandMigrationOptions)","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigration"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> LinearCrossover(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, maximumSegmentLength: Int, maximumCrossoverDistance: Int, maximumSegmentLengthDifference: Int)","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover.LinearCrossover","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover/-linear-crossover/-linear-crossover.html","searchKeys":["LinearCrossover","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> LinearCrossover(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, maximumSegmentLength: Int, maximumCrossoverDistance: Int, maximumSegmentLengthDifference: Int)","nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover.LinearCrossover"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MacroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, insertionRate: Double, deletionRate: Double)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.MacroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro/-macro-mutation-operator/-macro-mutation-operator.html","searchKeys":["MacroMutationOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MacroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, insertionRate: Double, deletionRate: Double)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.MacroMutationOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MacroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, insertionRate: Double, deletionRate: Double, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.MacroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro/-macro-mutation-operator/-macro-mutation-operator.html","searchKeys":["MacroMutationOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MacroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, insertionRate: Double, deletionRate: Double, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.MacroMutationOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MasterSlave(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.MasterSlave","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/-master-slave.html","searchKeys":["MasterSlave","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MasterSlave(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.MasterSlave"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MicroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, registerMutationRate: Double, operatorMutationRate: Double, constantMutationFunc: ConstantMutationFunction<TProgram>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.MicroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-micro-mutation-operator/-micro-mutation-operator.html","searchKeys":["MicroMutationOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MicroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, registerMutationRate: Double, operatorMutationRate: Double, constantMutationFunc: ConstantMutationFunction<TProgram>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.MicroMutationOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MicroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, registerMutationRate: Double, operatorMutationRate: Double, constantMutationFunc: ConstantMutationFunction<TProgram>, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.MicroMutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-micro-mutation-operator/-micro-mutation-operator.html","searchKeys":["MicroMutationOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MicroMutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, registerMutationRate: Double, operatorMutationRate: Double, constantMutationFunc: ConstantMutationFunction<TProgram>, mutationStrategyFactory: MutationStrategyFactory<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.MicroMutationOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> ModuleFactory(container: ModuleContainer<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.modules.ModuleFactory.ModuleFactory","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-factory/-module-factory.html","searchKeys":["ModuleFactory","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> ModuleFactory(container: ModuleContainer<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.modules.ModuleFactory.ModuleFactory"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.MutationOperator.MutationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation/-mutation-operator/-mutation-operator.html","searchKeys":["MutationOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MutationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.MutationOperator.MutationOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MutationStrategy(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategy.MutationStrategy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy/-mutation-strategy/-mutation-strategy.html","searchKeys":["MutationStrategy","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> MutationStrategy(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategy.MutationStrategy"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> ProgramGenerator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, instructionGenerator: InstructionGenerator<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.program.ProgramGenerator.ProgramGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-generator/-program-generator.html","searchKeys":["ProgramGenerator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> ProgramGenerator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, instructionGenerator: InstructionGenerator<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.program.ProgramGenerator.ProgramGenerator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> RecombinationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.RecombinationOperator.RecombinationOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination/-recombination-operator/-recombination-operator.html","searchKeys":["RecombinationOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> RecombinationOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.recombination.RecombinationOperator.RecombinationOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> SelectionOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.SelectionOperator.SelectionOperator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-selection-operator/-selection-operator.html","searchKeys":["SelectionOperator","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> SelectionOperator(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.operators.selection.SelectionOperator.SelectionOperator"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> SequentialTrainer(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int)","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.SequentialTrainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-trainer/-sequential-trainer.html","searchKeys":["SequentialTrainer","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> SequentialTrainer(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>, runs: Int)","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.SequentialTrainer"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> SteadyState(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.SteadyState","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/-steady-state.html","searchKeys":["SteadyState","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> SteadyState(environment: EnvironmentFacade<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.SteadyState"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> TournamentSelection(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int, numberOfOffspring: Int, removeWinnersFromPopulation: Boolean = true)","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection.TournamentSelection","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-tournament-selection/-tournament-selection.html","searchKeys":["TournamentSelection","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> TournamentSelection(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, tournamentSize: Int, numberOfOffspring: Int, removeWinnersFromPopulation: Boolean = true)","nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection.TournamentSelection"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> Trainer(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.evolution.training.Trainer.Trainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-trainer/-trainer.html","searchKeys":["Trainer","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> Trainer(environment: EnvironmentFacade<TProgram, TOutput, TTarget>, model: EvolutionModel<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.evolution.training.Trainer.Trainer"]},{"name":"fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> TrainingResult(evaluations: List<EvolutionResult<TProgram, TOutput>>, models: List<EvolutionModel<TProgram, TOutput, TTarget>>)","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingResult.TrainingResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-result/-training-result.html","searchKeys":["TrainingResult","fun <TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>> TrainingResult(evaluations: List<EvolutionResult<TProgram, TOutput>>, models: List<EvolutionModel<TProgram, TOutput, TTarget>>)","nz.co.jedsimson.lgp.core.evolution.training.TrainingResult.TrainingResult"]},{"name":"fun <TProgram, TOutput : Output<TProgram>> Evaluation(fitness: Double, individual: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation.Evaluation","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-evaluation/-evaluation.html","searchKeys":["Evaluation","fun <TProgram, TOutput : Output<TProgram>> Evaluation(fitness: Double, individual: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation.Evaluation"]},{"name":"fun <TProgram, TOutput : Output<TProgram>> EvolutionResult(best: Program<TProgram, TOutput>, individuals: List<Program<TProgram, TOutput>>, statistics: List<EvolutionStatistics>)","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.EvolutionResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-result/-evolution-result.html","searchKeys":["EvolutionResult","fun <TProgram, TOutput : Output<TProgram>> EvolutionResult(best: Program<TProgram, TOutput>, individuals: List<Program<TProgram, TOutput>>, statistics: List<EvolutionStatistics>)","nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.EvolutionResult"]},{"name":"fun <TProgram, TOutput : Output<TProgram>> ProgressUpdate(progress: Double, result: EvolutionResult<TProgram, TOutput>?)","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate.ProgressUpdate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-messages/-progress-update/-progress-update.html","searchKeys":["ProgressUpdate","fun <TProgram, TOutput : Output<TProgram>> ProgressUpdate(progress: Double, result: EvolutionResult<TProgram, TOutput>?)","nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate.ProgressUpdate"]},{"name":"fun <TProgram, TOutput : Output<TProgram>> TestResult(predicted: List<TOutput>, expected: List<Target<TProgram>>)","description":"nz.co.jedsimson.lgp.core.evolution.model.TestResult.TestResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-test-result/-test-result.html","searchKeys":["TestResult","fun <TProgram, TOutput : Output<TProgram>> TestResult(predicted: List<TOutput>, expected: List<Target<TProgram>>)","nz.co.jedsimson.lgp.core.evolution.model.TestResult.TestResult"]},{"name":"fun <TProgram> Environment(configurationLoader: ConfigurationLoader, constantLoader: ConstantLoader<TProgram>, operationLoader: OperationLoader<TProgram>, defaultValueProvider: DefaultValueProvider<TProgram>, fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>, resultAggregator: ResultAggregator<TProgram>? = null, randomStateSeed: Long? = null)","description":"nz.co.jedsimson.lgp.core.environment.Environment.Environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/-environment.html","searchKeys":["Environment","fun <TProgram> Environment(configurationLoader: ConfigurationLoader, constantLoader: ConstantLoader<TProgram>, operationLoader: OperationLoader<TProgram>, defaultValueProvider: DefaultValueProvider<TProgram>, fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>, resultAggregator: ResultAggregator<TProgram>? = null, randomStateSeed: Long? = null)","nz.co.jedsimson.lgp.core.environment.Environment.Environment"]},{"name":"fun <TProgram> EnvironmentSpecification(configurationLoader: ConfigurationLoader, constantLoader: ConstantLoader<TProgram>, operationLoader: OperationLoader<TProgram>, defaultValueProvider: DefaultValueProvider<TProgram>, fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>, resultAggregator: ResultAggregator<TProgram>? = null, randomStateSeed: Long? = null)","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.EnvironmentSpecification","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/-environment-specification.html","searchKeys":["EnvironmentSpecification","fun <TProgram> EnvironmentSpecification(configurationLoader: ConfigurationLoader, constantLoader: ConstantLoader<TProgram>, operationLoader: OperationLoader<TProgram>, defaultValueProvider: DefaultValueProvider<TProgram>, fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>, resultAggregator: ResultAggregator<TProgram>? = null, randomStateSeed: Long? = null)","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.EnvironmentSpecification"]},{"name":"fun <TRegister> RandomRegisterGenerator<TRegister>.getRandomInputAndCalculationRegisters(count: Int): MutableList<RegisterIndex>","description":"nz.co.jedsimson.lgp.core.program.registers.getRandomInputAndCalculationRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/get-random-input-and-calculation-registers.html","searchKeys":["getRandomInputAndCalculationRegisters","fun <TRegister> RandomRegisterGenerator<TRegister>.getRandomInputAndCalculationRegisters(count: Int): MutableList<RegisterIndex>","nz.co.jedsimson.lgp.core.program.registers.getRandomInputAndCalculationRegisters"]},{"name":"fun <out T> Argument(value: T)","description":"nz.co.jedsimson.lgp.core.program.registers.Argument.Argument","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-argument/-argument.html","searchKeys":["Argument","fun <out T> Argument(value: T)","nz.co.jedsimson.lgp.core.program.registers.Argument.Argument"]},{"name":"fun <out T> GenericConstantLoader(constants: List<String>, parseFunction: (String) -> T)","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.GenericConstantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-generic-constant-loader.html","searchKeys":["GenericConstantLoader","fun <out T> GenericConstantLoader(constants: List<String>, parseFunction: (String) -> T)","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.GenericConstantLoader"]},{"name":"fun <out TComponent> MemoizedComponentProvider(componentName: String, componentInitialisationFunction: (logger: Logger) -> TComponent)","description":"nz.co.jedsimson.lgp.core.environment.MemoizedComponentProvider.MemoizedComponentProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-memoized-component-provider/-memoized-component-provider.html","searchKeys":["MemoizedComponentProvider","fun <out TComponent> MemoizedComponentProvider(componentName: String, componentInitialisationFunction: (logger: Logger) -> TComponent)","nz.co.jedsimson.lgp.core.environment.MemoizedComponentProvider.MemoizedComponentProvider"]},{"name":"fun ArityException(message: String)","description":"nz.co.jedsimson.lgp.core.program.instructions.ArityException.ArityException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-arity-exception/-arity-exception.html","searchKeys":["ArityException","fun ArityException(message: String)","nz.co.jedsimson.lgp.core.program.instructions.ArityException.ArityException"]},{"name":"fun Builder()","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/-builder/-builder.html","searchKeys":["Builder","fun Builder()","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.Builder"]},{"name":"fun Builder()","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/-builder.html","searchKeys":["Builder","fun Builder()","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.Builder"]},{"name":"fun Builder()","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/-builder.html","searchKeys":["Builder","fun Builder()","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.Builder"]},{"name":"fun Builder()","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.Builder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/-builder/-builder.html","searchKeys":["Builder","fun Builder()","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.Builder"]},{"name":"fun ComponentLoadException(message: String, innerException: Exception?)","description":"nz.co.jedsimson.lgp.core.environment.ComponentLoadException.ComponentLoadException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-load-exception/-component-load-exception.html","searchKeys":["ComponentLoadException","fun ComponentLoadException(message: String, innerException: Exception?)","nz.co.jedsimson.lgp.core.environment.ComponentLoadException.ComponentLoadException"]},{"name":"fun Configuration()","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.Configuration","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/-configuration.html","searchKeys":["Configuration","fun Configuration()","nz.co.jedsimson.lgp.core.environment.config.Configuration.Configuration"]},{"name":"fun CsvResultOutputProvider(filename: String)","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.CsvResultOutputProvider.CsvResultOutputProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/-csv-result-output-provider/-csv-result-output-provider.html","searchKeys":["CsvResultOutputProvider","fun CsvResultOutputProvider(filename: String)","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.CsvResultOutputProvider.CsvResultOutputProvider"]},{"name":"fun Debug(key: String, context: DiagnosticEventContext = mapOf())","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Debug.Debug","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/-debug/-debug.html","searchKeys":["Debug","fun Debug(key: String, context: DiagnosticEventContext = mapOf())","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Debug.Debug"]},{"name":"fun DefaultOperationLoader(operationNames: List<String>)","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.DefaultOperationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/-default-operation-loader.html","searchKeys":["DefaultOperationLoader","fun DefaultOperationLoader(operationNames: List<String>)","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.DefaultOperationLoader"]},{"name":"fun DefaultResultAggregator()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.DefaultResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/-default-result-aggregator.html","searchKeys":["DefaultResultAggregator","fun DefaultResultAggregator()","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.DefaultResultAggregator"]},{"name":"fun Description(description: String)","description":"nz.co.jedsimson.lgp.core.evolution.Description.Description","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-description/-description.html","searchKeys":["Description","fun Description(description: String)","nz.co.jedsimson.lgp.core.evolution.Description.Description"]},{"name":"fun DoubleConstantLoader(constants: List<String>)","description":"nz.co.jedsimson.lgp.core.environment.constants.DoubleConstantLoader.DoubleConstantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-double-constant-loader/-double-constant-loader.html","searchKeys":["DoubleConstantLoader","fun DoubleConstantLoader(constants: List<String>)","nz.co.jedsimson.lgp.core.environment.constants.DoubleConstantLoader.DoubleConstantLoader"]},{"name":"fun Event()","description":"nz.co.jedsimson.lgp.core.environment.events.Event.Event","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event/-event.html","searchKeys":["Event","fun Event()","nz.co.jedsimson.lgp.core.environment.events.Event.Event"]},{"name":"fun Event(identifier: UUID)","description":"nz.co.jedsimson.lgp.core.environment.events.Event.Event","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event/-event.html","searchKeys":["Event","fun Event(identifier: UUID)","nz.co.jedsimson.lgp.core.environment.events.Event.Event"]},{"name":"fun EvolutionStatistics(data: Map<String, Any>)","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionStatistics.EvolutionStatistics","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-statistics/-evolution-statistics.html","searchKeys":["EvolutionStatistics","fun EvolutionStatistics(data: Map<String, Any>)","nz.co.jedsimson.lgp.core.evolution.model.EvolutionStatistics.EvolutionStatistics"]},{"name":"fun FitnessFunction()","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction.FitnessFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-function/-fitness-function.html","searchKeys":["FitnessFunction","fun FitnessFunction()","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction.FitnessFunction"]},{"name":"fun InMemoryResultAggregator()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.InMemoryResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/-in-memory-result-aggregator.html","searchKeys":["InMemoryResultAggregator","fun InMemoryResultAggregator()","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.InMemoryResultAggregator"]},{"name":"fun Instruction()","description":"nz.co.jedsimson.lgp.core.program.instructions.Instruction.Instruction","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction/-instruction.html","searchKeys":["Instruction","fun Instruction()","nz.co.jedsimson.lgp.core.program.instructions.Instruction.Instruction"]},{"name":"fun Invalid(reason: String)","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid.Invalid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-invalid/-invalid.html","searchKeys":["Invalid","fun Invalid(reason: String)","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid.Invalid"]},{"name":"fun InvalidConfigurationException(message: String)","description":"nz.co.jedsimson.lgp.core.environment.config.InvalidConfigurationException.InvalidConfigurationException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-invalid-configuration-exception/-invalid-configuration-exception.html","searchKeys":["InvalidConfigurationException","fun InvalidConfigurationException(message: String)","nz.co.jedsimson.lgp.core.environment.config.InvalidConfigurationException.InvalidConfigurationException"]},{"name":"fun InvalidCsvFileException(message: String)","description":"nz.co.jedsimson.lgp.core.environment.dataset.InvalidCsvFileException.InvalidCsvFileException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-invalid-csv-file-exception/-invalid-csv-file-exception.html","searchKeys":["InvalidCsvFileException","fun InvalidCsvFileException(message: String)","nz.co.jedsimson.lgp.core.environment.dataset.InvalidCsvFileException.InvalidCsvFileException"]},{"name":"fun InvalidModuleException(message: String?)","description":"nz.co.jedsimson.lgp.core.modules.InvalidModuleException.InvalidModuleException","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-invalid-module-exception/-invalid-module-exception.html","searchKeys":["InvalidModuleException","fun InvalidModuleException(message: String?)","nz.co.jedsimson.lgp.core.modules.InvalidModuleException.InvalidModuleException"]},{"name":"fun InvalidOperationSpecificationException(message: String)","description":"nz.co.jedsimson.lgp.core.environment.operations.InvalidOperationSpecificationException.InvalidOperationSpecificationException","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-invalid-operation-specification-exception/-invalid-operation-specification-exception.html","searchKeys":["InvalidOperationSpecificationException","fun InvalidOperationSpecificationException(message: String)","nz.co.jedsimson.lgp.core.environment.operations.InvalidOperationSpecificationException.InvalidOperationSpecificationException"]},{"name":"fun IslandMigrationOptions(numIslands: Int, migrationInterval: Int, migrationSize: Int)","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.IslandMigrationOptions","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/-island-migration-options/-island-migration-options.html","searchKeys":["IslandMigrationOptions","fun IslandMigrationOptions(numIslands: Int, migrationInterval: Int, migrationSize: Int)","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.IslandMigrationOptions"]},{"name":"fun JsonConfigurationLoader(filename: String)","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.JsonConfigurationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/-json-configuration-loader.html","searchKeys":["JsonConfigurationLoader","fun JsonConfigurationLoader(filename: String)","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.JsonConfigurationLoader"]},{"name":"fun List<Double>.standardDeviation(mean: Double = this.average()): Double","description":"nz.co.jedsimson.lgp.core.evolution.standardDeviation","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/standard-deviation.html","searchKeys":["standardDeviation","fun List<Double>.standardDeviation(mean: Double = this.average()): Double","nz.co.jedsimson.lgp.core.evolution.standardDeviation"]},{"name":"fun LoggerProvider()","description":"nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.LoggerProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger-provider/-logger-provider.html","searchKeys":["LoggerProvider","fun LoggerProvider()","nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.LoggerProvider"]},{"name":"fun MissingModuleException(message: String)","description":"nz.co.jedsimson.lgp.core.modules.MissingModuleException.MissingModuleException","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-missing-module-exception/-missing-module-exception.html","searchKeys":["MissingModuleException","fun MissingModuleException(message: String)","nz.co.jedsimson.lgp.core.modules.MissingModuleException.MissingModuleException"]},{"name":"fun ModuleCastException(message: String)","description":"nz.co.jedsimson.lgp.core.modules.ModuleCastException.ModuleCastException","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-cast-exception/-module-cast-exception.html","searchKeys":["ModuleCastException","fun ModuleCastException(message: String)","nz.co.jedsimson.lgp.core.modules.ModuleCastException.ModuleCastException"]},{"name":"fun ModuleContainer(modules: MutableMap<RegisteredModuleType, ModuleBuilder<TProgram, TOutput, TTarget>>)","description":"nz.co.jedsimson.lgp.core.modules.ModuleContainer.ModuleContainer","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-container/-module-container.html","searchKeys":["ModuleContainer","fun ModuleContainer(modules: MutableMap<RegisteredModuleType, ModuleBuilder<TProgram, TOutput, TTarget>>)","nz.co.jedsimson.lgp.core.modules.ModuleContainer.ModuleContainer"]},{"name":"fun ModuleInformation(description: String)","description":"nz.co.jedsimson.lgp.core.modules.ModuleInformation.ModuleInformation","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-information/-module-information.html","searchKeys":["ModuleInformation","fun ModuleInformation(description: String)","nz.co.jedsimson.lgp.core.modules.ModuleInformation.ModuleInformation"]},{"name":"fun ModuleInformation(name: String, metadata: Map<String, String>)","description":"nz.co.jedsimson.lgp.core.modules.ModuleInformation.ModuleInformation","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-information/-module-information.html","searchKeys":["ModuleInformation","fun ModuleInformation(name: String, metadata: Map<String, String>)","nz.co.jedsimson.lgp.core.modules.ModuleInformation.ModuleInformation"]},{"name":"fun MutationStrategyFactory()","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategyFactory.MutationStrategyFactory","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy/-mutation-strategy-factory/-mutation-strategy-factory.html","searchKeys":["MutationStrategyFactory","fun MutationStrategyFactory()","nz.co.jedsimson.lgp.core.evolution.operators.mutation.strategy.MutationStrategyFactory.MutationStrategyFactory"]},{"name":"fun Operation()","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation.Operation","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/-operation.html","searchKeys":["Operation","fun Operation()","nz.co.jedsimson.lgp.core.program.instructions.Operation.Operation"]},{"name":"fun Problem()","description":"nz.co.jedsimson.lgp.core.evolution.Problem.Problem","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/-problem.html","searchKeys":["Problem","fun Problem()","nz.co.jedsimson.lgp.core.evolution.Problem.Problem"]},{"name":"fun ProblemNotInitialisedException(message: String)","description":"nz.co.jedsimson.lgp.core.evolution.ProblemNotInitialisedException.ProblemNotInitialisedException","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem-not-initialised-exception/-problem-not-initialised-exception.html","searchKeys":["ProblemNotInitialisedException","fun ProblemNotInitialisedException(message: String)","nz.co.jedsimson.lgp.core.evolution.ProblemNotInitialisedException.ProblemNotInitialisedException"]},{"name":"fun Program()","description":"nz.co.jedsimson.lgp.core.program.Program.Program","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/-program.html","searchKeys":["Program","fun Program()","nz.co.jedsimson.lgp.core.program.Program.Program"]},{"name":"fun ProgramTranslator()","description":"nz.co.jedsimson.lgp.core.program.ProgramTranslator.ProgramTranslator","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-translator/-program-translator.html","searchKeys":["ProgramTranslator","fun ProgramTranslator()","nz.co.jedsimson.lgp.core.program.ProgramTranslator.ProgramTranslator"]},{"name":"fun Random.randInt(min: Int, max: Int): Int","description":"nz.co.jedsimson.lgp.core.environment.randInt","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/rand-int.html","searchKeys":["randInt","fun Random.randInt(min: Int, max: Int): Int","nz.co.jedsimson.lgp.core.environment.randInt"]},{"name":"fun RawResultTableOutputProvider(filename: String)","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.RawResultTableOutputProvider.RawResultTableOutputProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/-raw-result-table-output-provider/-raw-result-table-output-provider.html","searchKeys":["RawResultTableOutputProvider","fun RawResultTableOutputProvider(filename: String)","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.RawResultTableOutputProvider.RawResultTableOutputProvider"]},{"name":"fun RegisterAccessException(message: String)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterAccessException.RegisterAccessException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-access-exception/-register-access-exception.html","searchKeys":["RegisterAccessException","fun RegisterAccessException(message: String)","nz.co.jedsimson.lgp.core.program.registers.RegisterAccessException.RegisterAccessException"]},{"name":"fun RegisterReadException(message: String)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterReadException.RegisterReadException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-read-exception/-register-read-exception.html","searchKeys":["RegisterReadException","fun RegisterReadException(message: String)","nz.co.jedsimson.lgp.core.program.registers.RegisterReadException.RegisterReadException"]},{"name":"fun RegisterSetInitialisationException(message: String)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSetInitialisationException.RegisterSetInitialisationException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set-initialisation-exception/-register-set-initialisation-exception.html","searchKeys":["RegisterSetInitialisationException","fun RegisterSetInitialisationException(message: String)","nz.co.jedsimson.lgp.core.program.registers.RegisterSetInitialisationException.RegisterSetInitialisationException"]},{"name":"fun RegisterWriteRangeException(message: String)","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterWriteRangeException.RegisterWriteRangeException","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-write-range-exception/-register-write-range-exception.html","searchKeys":["RegisterWriteRangeException","fun RegisterWriteRangeException(message: String)","nz.co.jedsimson.lgp.core.program.registers.RegisterWriteRangeException.RegisterWriteRangeException"]},{"name":"fun ResultAggregator()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregator.ResultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregator/-result-aggregator.html","searchKeys":["ResultAggregator","fun ResultAggregator()","nz.co.jedsimson.lgp.core.evolution.ResultAggregator.ResultAggregator"]},{"name":"fun ResultAggregators()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.ResultAggregators","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-result-aggregators.html","searchKeys":["ResultAggregators","fun ResultAggregators()","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.ResultAggregators"]},{"name":"fun RunBasedExportableResult(run: Int, statistics: EvolutionStatistics)","description":"nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult.RunBasedExportableResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-run-based-exportable-result/-run-based-exportable-result.html","searchKeys":["RunBasedExportableResult","fun RunBasedExportableResult(run: Int, statistics: EvolutionStatistics)","nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult.RunBasedExportableResult"]},{"name":"fun SequenceGenerator()","description":"nz.co.jedsimson.lgp.core.environment.dataset.SequenceGenerator.SequenceGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sequence-generator/-sequence-generator.html","searchKeys":["SequenceGenerator","fun SequenceGenerator()","nz.co.jedsimson.lgp.core.environment.dataset.SequenceGenerator.SequenceGenerator"]},{"name":"fun Trace(key: String, context: DiagnosticEventContext = mapOf())","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Trace.Trace","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/-trace/-trace.html","searchKeys":["Trace","fun Trace(key: String, context: DiagnosticEventContext = mapOf())","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Trace.Trace"]},{"name":"fun TrainingJob()","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingJob.TrainingJob","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-job/-training-job.html","searchKeys":["TrainingJob","fun TrainingJob()","nz.co.jedsimson.lgp.core.evolution.training.TrainingJob.TrainingJob"]},{"name":"fun UniformlyDistributedGenerator(randomState: Random = Random())","description":"nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator.UniformlyDistributedGenerator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-uniformly-distributed-generator/-uniformly-distributed-generator.html","searchKeys":["UniformlyDistributedGenerator","fun UniformlyDistributedGenerator(randomState: Random = Random())","nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator.UniformlyDistributedGenerator"]},{"name":"fun Valid()","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Valid.Valid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-valid/-valid.html","searchKeys":["Valid","fun Valid()","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Valid.Valid"]},{"name":"fun constants(values: List<String>): GenericConstantLoader.Builder<U>","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.constants","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/constants.html","searchKeys":["constants","fun constants(values: List<String>): GenericConstantLoader.Builder<U>","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.constants"]},{"name":"fun dispatch(event: Event)","description":"nz.co.jedsimson.lgp.core.environment.events.EventDispatcher.dispatch","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-dispatcher/dispatch.html","searchKeys":["dispatch","fun dispatch(event: Event)","nz.co.jedsimson.lgp.core.environment.events.EventDispatcher.dispatch"]},{"name":"fun evaluate(program: Program<TData, TOutput>, dataset: Dataset<TData, TTarget>): Evaluation<TData, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessEvaluator.evaluate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-evaluator/evaluate.html","searchKeys":["evaluate","fun evaluate(program: Program<TData, TOutput>, dataset: Dataset<TData, TTarget>): Evaluation<TData, TOutput>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessEvaluator.evaluate"]},{"name":"fun feature(name: String): Feature<TData>","description":"nz.co.jedsimson.lgp.core.environment.dataset.Sample.feature","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sample/feature.html","searchKeys":["feature","fun feature(name: String): Feature<TData>","nz.co.jedsimson.lgp.core.environment.dataset.Sample.feature"]},{"name":"fun featureParseFunction(function: (Header, Row) -> Sample<UData>): CsvDatasetLoader.Builder<UData, UTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.featureParseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/feature-parse-function.html","searchKeys":["featureParseFunction","fun featureParseFunction(function: (Header, Row) -> Sample<UData>): CsvDatasetLoader.Builder<UData, UTarget>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.featureParseFunction"]},{"name":"fun filename(name: String): CsvDatasetLoader.Builder<UData, UTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.filename","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/filename.html","searchKeys":["filename","fun filename(name: String): CsvDatasetLoader.Builder<UData, UTarget>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.filename"]},{"name":"fun filename(name: String): JsonConfigurationLoader.Builder","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.filename","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/-builder/filename.html","searchKeys":["filename","fun filename(name: String): JsonConfigurationLoader.Builder","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.filename"]},{"name":"fun generate(n: Int, start: Double, end: Double): Sequence<Double>","description":"nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator.generate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-uniformly-distributed-generator/generate.html","searchKeys":["generate","fun generate(n: Int, start: Double, end: Double): Sequence<Double>","nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator.generate"]},{"name":"fun generate(start: Double, end: Double, step: Double, inclusive: Boolean = false): Sequence<Double>","description":"nz.co.jedsimson.lgp.core.environment.dataset.SequenceGenerator.generate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sequence-generator/generate.html","searchKeys":["generate","fun generate(start: Double, end: Double, step: Double, inclusive: Boolean = false): Sequence<Double>","nz.co.jedsimson.lgp.core.environment.dataset.SequenceGenerator.generate"]},{"name":"fun get(index: Int): TData","description":"nz.co.jedsimson.lgp.core.program.registers.Arguments.get","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-arguments/get.html","searchKeys":["get","fun get(index: Int): TData","nz.co.jedsimson.lgp.core.program.registers.Arguments.get"]},{"name":"fun getLogger(name: String): Logger","description":"nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.Companion.getLogger","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger-provider/-companion/get-logger.html","searchKeys":["getLogger","fun getLogger(name: String): Logger","nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.Companion.getLogger"]},{"name":"fun getLogger(name: String): Logger","description":"nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.getLogger","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger-provider/get-logger.html","searchKeys":["getLogger","fun getLogger(name: String): Logger","nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.getLogger"]},{"name":"fun indexedDoubleFeatureParsingFunction(featureIndices: IntRange): (Header, Row) -> Sample<Double>","description":"nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions.indexedDoubleFeatureParsingFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-parsing-functions/indexed-double-feature-parsing-function.html","searchKeys":["indexedDoubleFeatureParsingFunction","fun indexedDoubleFeatureParsingFunction(featureIndices: IntRange): (Header, Row) -> Sample<Double>","nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions.indexedDoubleFeatureParsingFunction"]},{"name":"fun indexedDoubleMultipleTargetParsingFunction(targetIndices: IntRange): (Header, Row) -> Targets.Multiple<Double>","description":"nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions.indexedDoubleMultipleTargetParsingFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-parsing-functions/indexed-double-multiple-target-parsing-function.html","searchKeys":["indexedDoubleMultipleTargetParsingFunction","fun indexedDoubleMultipleTargetParsingFunction(targetIndices: IntRange): (Header, Row) -> Targets.Multiple<Double>","nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions.indexedDoubleMultipleTargetParsingFunction"]},{"name":"fun indexedDoubleSingleTargetParsingFunction(targetIndex: Int): (Header, Row) -> Targets.Single<Double>","description":"nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions.indexedDoubleSingleTargetParsingFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-parsing-functions/indexed-double-single-target-parsing-function.html","searchKeys":["indexedDoubleSingleTargetParsingFunction","fun indexedDoubleSingleTargetParsingFunction(targetIndex: Int): (Header, Row) -> Targets.Single<Double>","nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions.indexedDoubleSingleTargetParsingFunction"]},{"name":"fun isValid(): ConfigurationValidity","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.isValid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/is-valid.html","searchKeys":["isValid","fun isValid(): ConfigurationValidity","nz.co.jedsimson.lgp.core.environment.config.Configuration.isValid"]},{"name":"fun next(): Sequence<Instruction<TProgram>>","description":"nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.next","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction-generator/next.html","searchKeys":["next","fun next(): Sequence<Instruction<TProgram>>","nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.next"]},{"name":"fun next(): Sequence<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.program.ProgramGenerator.next","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-generator/next.html","searchKeys":["next","fun next(): Sequence<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.program.ProgramGenerator.next"]},{"name":"fun next(): Sequence<Register<T>>","description":"nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.next","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-random-register-generator/next.html","searchKeys":["next","fun next(): Sequence<Register<T>>","nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.next"]},{"name":"fun next(a: RegisterType, b: RegisterType, predicate: () -> Boolean): Sequence<Register<T>>","description":"nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.next","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-random-register-generator/next.html","searchKeys":["next","fun next(a: RegisterType, b: RegisterType, predicate: () -> Boolean): Sequence<Register<T>>","nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.next"]},{"name":"fun next(type: RegisterType): Sequence<Register<T>>","description":"nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.next","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-random-register-generator/next.html","searchKeys":["next","fun next(type: RegisterType): Sequence<Register<T>>","nz.co.jedsimson.lgp.core.program.registers.RandomRegisterGenerator.next"]},{"name":"fun operations(names: List<String>): DefaultOperationLoader.Builder<U>","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.operations","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/-builder/operations.html","searchKeys":["operations","fun operations(names: List<String>): DefaultOperationLoader.Builder<U>","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.operations"]},{"name":"fun parseFunction(func: (String) -> U): GenericConstantLoader.Builder<U>","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.parseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/parse-function.html","searchKeys":["parseFunction","fun parseFunction(func: (String) -> U): GenericConstantLoader.Builder<U>","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.parseFunction"]},{"name":"fun randomDoubleValueProvider(randomState: Random): DefaultValueProvider<Double>","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.randomDoubleValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-providers/random-double-value-provider.html","searchKeys":["randomDoubleValueProvider","fun randomDoubleValueProvider(randomState: Random): DefaultValueProvider<Double>","nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.randomDoubleValueProvider"]},{"name":"fun randomGaussianNoise(randomState: Random): ConstantMutationFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.ConstantMutationFunctions.randomGaussianNoise","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-constant-mutation-functions/random-gaussian-noise.html","searchKeys":["randomGaussianNoise","fun randomGaussianNoise(randomState: Random): ConstantMutationFunction<Double>","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.ConstantMutationFunctions.randomGaussianNoise"]},{"name":"fun randomGaussianValueProvider(randomState: Random): DefaultValueProvider<Double>","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.randomGaussianValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-providers/random-gaussian-value-provider.html","searchKeys":["randomGaussianValueProvider","fun randomGaussianValueProvider(randomState: Random): DefaultValueProvider<Double>","nz.co.jedsimson.lgp.core.environment.DefaultValueProviders.randomGaussianValueProvider"]},{"name":"fun reader(reader: Reader): CsvDatasetLoader.Builder<UData, UTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.reader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/reader.html","searchKeys":["reader","fun reader(reader: Reader): CsvDatasetLoader.Builder<UData, UTarget>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.reader"]},{"name":"fun targetParseFunction(function: (Header, Row) -> UTarget): CsvDatasetLoader.Builder<UData, UTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.targetParseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/target-parse-function.html","searchKeys":["targetParseFunction","fun targetParseFunction(function: (Header, Row) -> UTarget): CsvDatasetLoader.Builder<UData, UTarget>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.targetParseFunction"]},{"name":"fun toArgument(): Argument<T>","description":"nz.co.jedsimson.lgp.core.program.registers.Register.toArgument","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/to-argument.html","searchKeys":["toArgument","fun toArgument(): Argument<T>","nz.co.jedsimson.lgp.core.program.registers.Register.toArgument"]},{"name":"inline fun <TEvent : Event> register(listener: EventListener<TEvent>)","description":"nz.co.jedsimson.lgp.core.environment.events.EventRegistry.register","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-registry/register.html","searchKeys":["register","inline fun <TEvent : Event> register(listener: EventListener<TEvent>)","nz.co.jedsimson.lgp.core.environment.events.EventRegistry.register"]},{"name":"inline fun <TModule : Module> instance(type: RegisteredModuleType): TModule","description":"nz.co.jedsimson.lgp.core.modules.ModuleFactory.instance","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-factory/instance.html","searchKeys":["instance","inline fun <TModule : Module> instance(type: RegisteredModuleType): TModule","nz.co.jedsimson.lgp.core.modules.ModuleFactory.instance"]},{"name":"interface Arity","description":"nz.co.jedsimson.lgp.core.program.instructions.Arity","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-arity/index.html","searchKeys":["Arity","interface Arity","nz.co.jedsimson.lgp.core.program.instructions.Arity"]},{"name":"interface ComponentLoader<out TComponent> : Module","description":"nz.co.jedsimson.lgp.core.environment.ComponentLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-loader/index.html","searchKeys":["ComponentLoader","interface ComponentLoader<out TComponent> : Module","nz.co.jedsimson.lgp.core.environment.ComponentLoader"]},{"name":"interface ComponentLoaderBuilder<out TComponentLoader>","description":"nz.co.jedsimson.lgp.core.environment.ComponentLoaderBuilder","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-loader-builder/index.html","searchKeys":["ComponentLoaderBuilder","interface ComponentLoaderBuilder<out TComponentLoader>","nz.co.jedsimson.lgp.core.environment.ComponentLoaderBuilder"]},{"name":"interface ComponentProvider<out TComponent>","description":"nz.co.jedsimson.lgp.core.environment.ComponentProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-component-provider/index.html","searchKeys":["ComponentProvider","interface ComponentProvider<out TComponent>","nz.co.jedsimson.lgp.core.environment.ComponentProvider"]},{"name":"interface ConfigurationLoader : ComponentLoader<Configuration> ","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-loader/index.html","searchKeys":["ConfigurationLoader","interface ConfigurationLoader : ComponentLoader<Configuration> ","nz.co.jedsimson.lgp.core.environment.config.ConfigurationLoader"]},{"name":"interface ConstantLoader<out T> : ComponentLoader<List<T>> ","description":"nz.co.jedsimson.lgp.core.environment.constants.ConstantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-constant-loader/index.html","searchKeys":["ConstantLoader","interface ConstantLoader<out T> : ComponentLoader<List<T>> ","nz.co.jedsimson.lgp.core.environment.constants.ConstantLoader"]},{"name":"interface DatasetLoader<TData, TTarget : Target<TData>> : ComponentLoader<Dataset<TData, TTarget>> ","description":"nz.co.jedsimson.lgp.core.environment.dataset.DatasetLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset-loader/index.html","searchKeys":["DatasetLoader","interface DatasetLoader<TData, TTarget : Target<TData>> : ComponentLoader<Dataset<TData, TTarget>> ","nz.co.jedsimson.lgp.core.environment.dataset.DatasetLoader"]},{"name":"interface DefaultValueProvider<out TValue>","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-provider/index.html","searchKeys":["DefaultValueProvider","interface DefaultValueProvider<out TValue>","nz.co.jedsimson.lgp.core.environment.DefaultValueProvider"]},{"name":"interface EnvironmentFacade<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentFacade","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-facade/index.html","searchKeys":["EnvironmentFacade","interface EnvironmentFacade<TProgram, TOutput : Output<TProgram>, TTarget : Target<TProgram>>","nz.co.jedsimson.lgp.core.environment.EnvironmentFacade"]},{"name":"interface EventListener<in TEvent : Event>","description":"nz.co.jedsimson.lgp.core.environment.events.EventListener","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-listener/index.html","searchKeys":["EventListener","interface EventListener<in TEvent : Event>","nz.co.jedsimson.lgp.core.environment.events.EventListener"]},{"name":"interface ExportableResult<T>","description":"nz.co.jedsimson.lgp.core.evolution.ExportableResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-exportable-result/index.html","searchKeys":["ExportableResult","interface ExportableResult<T>","nz.co.jedsimson.lgp.core.evolution.ExportableResult"]},{"name":"interface Logger","description":"nz.co.jedsimson.lgp.core.environment.logging.Logger","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger/index.html","searchKeys":["Logger","interface Logger","nz.co.jedsimson.lgp.core.environment.logging.Logger"]},{"name":"interface Module","description":"nz.co.jedsimson.lgp.core.modules.Module","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module/index.html","searchKeys":["Module","interface Module","nz.co.jedsimson.lgp.core.modules.Module"]},{"name":"interface OperationLoader<T> : ComponentLoader<List<Operation<T>>> ","description":"nz.co.jedsimson.lgp.core.environment.operations.OperationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-operation-loader/index.html","searchKeys":["OperationLoader","interface OperationLoader<T> : ComponentLoader<List<Operation<T>>> ","nz.co.jedsimson.lgp.core.environment.operations.OperationLoader"]},{"name":"interface Output<TData>","description":"nz.co.jedsimson.lgp.core.program.Output","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-output/index.html","searchKeys":["Output","interface Output<TData>","nz.co.jedsimson.lgp.core.program.Output"]},{"name":"interface RegisterSet<TData>","description":"nz.co.jedsimson.lgp.core.program.registers.RegisterSet","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register-set/index.html","searchKeys":["RegisterSet","interface RegisterSet<TData>","nz.co.jedsimson.lgp.core.program.registers.RegisterSet"]},{"name":"interface RegisteredModuleType","description":"nz.co.jedsimson.lgp.core.modules.RegisteredModuleType","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-registered-module-type/index.html","searchKeys":["RegisteredModuleType","interface RegisteredModuleType","nz.co.jedsimson.lgp.core.modules.RegisteredModuleType"]},{"name":"interface ResultOutputProvider<T>","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-provider/index.html","searchKeys":["ResultOutputProvider","interface ResultOutputProvider<T>","nz.co.jedsimson.lgp.core.evolution.ResultOutputProvider"]},{"name":"interface Solution<T>","description":"nz.co.jedsimson.lgp.core.evolution.Solution","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-solution/index.html","searchKeys":["Solution","interface Solution<T>","nz.co.jedsimson.lgp.core.evolution.Solution"]},{"name":"interface Target<out TData>","description":"nz.co.jedsimson.lgp.core.environment.dataset.Target","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-target/index.html","searchKeys":["Target","interface Target<out TData>","nz.co.jedsimson.lgp.core.environment.dataset.Target"]},{"name":"interface TrainingUpdateMessage","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingUpdateMessage","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-update-message/index.html","searchKeys":["TrainingUpdateMessage","interface TrainingUpdateMessage","nz.co.jedsimson.lgp.core.evolution.training.TrainingUpdateMessage"]},{"name":"lateinit var bestProgram: Program<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.bestProgram","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/best-program.html","searchKeys":["bestProgram","lateinit var bestProgram: Program<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.bestProgram"]},{"name":"lateinit var bestProgram: Program<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.bestProgram","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/best-program.html","searchKeys":["bestProgram","lateinit var bestProgram: Program<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.bestProgram"]},{"name":"lateinit var constants: List<String>","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.constants","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/constants.html","searchKeys":["constants","lateinit var constants: List<String>","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.constants"]},{"name":"lateinit var environment: Environment<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/environment.html","searchKeys":["environment","lateinit var environment: Environment<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.Problem.environment"]},{"name":"lateinit var environment: EnvironmentFacade<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.modules.ModuleContainer.environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-container/environment.html","searchKeys":["environment","lateinit var environment: EnvironmentFacade<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.modules.ModuleContainer.environment"]},{"name":"lateinit var featureParseFunction: (Header, Row) -> Sample<UData>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.featureParseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/feature-parse-function.html","searchKeys":["featureParseFunction","lateinit var featureParseFunction: (Header, Row) -> Sample<UData>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.featureParseFunction"]},{"name":"lateinit var filename: String","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.filename","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/-builder/filename.html","searchKeys":["filename","lateinit var filename: String","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.filename"]},{"name":"lateinit var individuals: MutableList<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.individuals","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/individuals.html","searchKeys":["individuals","lateinit var individuals: MutableList<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.individuals"]},{"name":"lateinit var individuals: MutableList<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.individuals","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/individuals.html","searchKeys":["individuals","lateinit var individuals: MutableList<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.individuals"]},{"name":"lateinit var model: EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.Problem.model","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-problem/model.html","searchKeys":["model","lateinit var model: EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.Problem.model"]},{"name":"lateinit var operationNames: List<String>","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.operationNames","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/-builder/operation-names.html","searchKeys":["operationNames","lateinit var operationNames: List<String>","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.operationNames"]},{"name":"lateinit var parseFunction: (String) -> U","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.parseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/parse-function.html","searchKeys":["parseFunction","lateinit var parseFunction: (String) -> U","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.parseFunction"]},{"name":"lateinit var reader: Reader","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.reader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/reader.html","searchKeys":["reader","lateinit var reader: Reader","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.reader"]},{"name":"lateinit var targetParseFunction: (Header, Row) -> UTarget","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.targetParseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/target-parse-function.html","searchKeys":["targetParseFunction","lateinit var targetParseFunction: (Header, Row) -> UTarget","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.targetParseFunction"]},{"name":"object Companion","description":"nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.Companion","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.logging/-logger-provider/-companion/index.html","searchKeys":["Companion","object Companion","nz.co.jedsimson.lgp.core.environment.logging.LoggerProvider.Companion"]},{"name":"object ConstantMutationFunctions","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.ConstantMutationFunctions","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-constant-mutation-functions/index.html","searchKeys":["ConstantMutationFunctions","object ConstantMutationFunctions","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.ConstantMutationFunctions"]},{"name":"object DefaultValueProviders","description":"nz.co.jedsimson.lgp.core.environment.DefaultValueProviders","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-default-value-providers/index.html","searchKeys":["DefaultValueProviders","object DefaultValueProviders","nz.co.jedsimson.lgp.core.environment.DefaultValueProviders"]},{"name":"object EventDispatcher","description":"nz.co.jedsimson.lgp.core.environment.events.EventDispatcher","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-dispatcher/index.html","searchKeys":["EventDispatcher","object EventDispatcher","nz.co.jedsimson.lgp.core.environment.events.EventDispatcher"]},{"name":"object EventRegistry","description":"nz.co.jedsimson.lgp.core.environment.events.EventRegistry","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-registry/index.html","searchKeys":["EventRegistry","object EventRegistry","nz.co.jedsimson.lgp.core.environment.events.EventRegistry"]},{"name":"object FitnessContexts","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/index.html","searchKeys":["FitnessContexts","object FitnessContexts","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts"]},{"name":"object FitnessFunctions","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/index.html","searchKeys":["FitnessFunctions","object FitnessFunctions","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions"]},{"name":"object Outputs","description":"nz.co.jedsimson.lgp.core.program.Outputs","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/index.html","searchKeys":["Outputs","object Outputs","nz.co.jedsimson.lgp.core.program.Outputs"]},{"name":"object ParsingFunctions","description":"nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-parsing-functions/index.html","searchKeys":["ParsingFunctions","object ParsingFunctions","nz.co.jedsimson.lgp.core.environment.dataset.ParsingFunctions"]},{"name":"object ResultOutputProviders","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/index.html","searchKeys":["ResultOutputProviders","object ResultOutputProviders","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders"]},{"name":"object Targets","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/index.html","searchKeys":["Targets","object Targets","nz.co.jedsimson.lgp.core.environment.dataset.Targets"]},{"name":"object TrainingMessages","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-messages/index.html","searchKeys":["TrainingMessages","object TrainingMessages","nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages"]},{"name":"open class Event(identifier: UUID)","description":"nz.co.jedsimson.lgp.core.environment.events.Event","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event/index.html","searchKeys":["Event","open class Event(identifier: UUID)","nz.co.jedsimson.lgp.core.environment.events.Event"]},{"name":"open class EvolutionResult<TProgram, TOutput : Output<TProgram>>(best: Program<TProgram, TOutput>, individuals: List<Program<TProgram, TOutput>>, statistics: List<EvolutionStatistics>)","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-result/index.html","searchKeys":["EvolutionResult","open class EvolutionResult<TProgram, TOutput : Output<TProgram>>(best: Program<TProgram, TOutput>, individuals: List<Program<TProgram, TOutput>>, statistics: List<EvolutionStatistics>)","nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult"]},{"name":"open class Feature<TData>(name: String, value: TData)","description":"nz.co.jedsimson.lgp.core.environment.dataset.Feature","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-feature/index.html","searchKeys":["Feature","open class Feature<TData>(name: String, value: TData)","nz.co.jedsimson.lgp.core.environment.dataset.Feature"]},{"name":"open class GenericConstantLoader<out T>(constants: List<String>, parseFunction: (String) -> T) : ConstantLoader<T> ","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/index.html","searchKeys":["GenericConstantLoader","open class GenericConstantLoader<out T>(constants: List<String>, parseFunction: (String) -> T) : ConstantLoader<T> ","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader"]},{"name":"open fun execute(arguments: Arguments<TData>): TData","description":"nz.co.jedsimson.lgp.core.program.instructions.Operation.execute","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-operation/execute.html","searchKeys":["execute","open fun execute(arguments: Arguments<TData>): TData","nz.co.jedsimson.lgp.core.program.instructions.Operation.execute"]},{"name":"open lateinit override var configuration: Configuration","description":"nz.co.jedsimson.lgp.core.environment.Environment.configuration","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/configuration.html","searchKeys":["configuration","open lateinit override var configuration: Configuration","nz.co.jedsimson.lgp.core.environment.Environment.configuration"]},{"name":"open lateinit override var constants: List<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.Environment.constants","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/constants.html","searchKeys":["constants","open lateinit override var constants: List<TProgram>","nz.co.jedsimson.lgp.core.environment.Environment.constants"]},{"name":"open lateinit override var moduleFactory: ModuleFactory<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.Environment.moduleFactory","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/module-factory.html","searchKeys":["moduleFactory","open lateinit override var moduleFactory: ModuleFactory<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.Environment.moduleFactory"]},{"name":"open lateinit override var operations: List<Operation<TProgram>>","description":"nz.co.jedsimson.lgp.core.environment.Environment.operations","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/operations.html","searchKeys":["operations","open lateinit override var operations: List<Operation<TProgram>>","nz.co.jedsimson.lgp.core.environment.Environment.operations"]},{"name":"open lateinit override var registerSet: RegisterSet<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.Environment.registerSet","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/register-set.html","searchKeys":["registerSet","open lateinit override var registerSet: RegisterSet<TProgram>","nz.co.jedsimson.lgp.core.environment.Environment.registerSet"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.equals","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","nz.co.jedsimson.lgp.core.environment.config.Configuration.equals"]},{"name":"open operator override fun get(index: Int): TData","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.get","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/get.html","searchKeys":["get","open operator override fun get(index: Int): TData","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.get"]},{"name":"open operator override fun set(index: Int, value: TData)","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.set","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/set.html","searchKeys":["set","open operator override fun set(index: Int, value: TData)","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.set"]},{"name":"open override fun add(result: ExportableResult<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.add","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/add.html","searchKeys":["add","open override fun add(result: ExportableResult<T>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.add"]},{"name":"open override fun add(result: ExportableResult<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.add","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/add.html","searchKeys":["add","open override fun add(result: ExportableResult<T>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.add"]},{"name":"open override fun add(result: ExportableResult<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.add","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/add.html","searchKeys":["add","open override fun add(result: ExportableResult<T>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.add"]},{"name":"open override fun addAll(results: List<ExportableResult<T>>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.addAll","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/add-all.html","searchKeys":["addAll","open override fun addAll(results: List<ExportableResult<T>>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.addAll"]},{"name":"open override fun addAll(results: List<ExportableResult<T>>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.addAll","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/add-all.html","searchKeys":["addAll","open override fun addAll(results: List<ExportableResult<T>>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.addAll"]},{"name":"open override fun addAll(results: List<ExportableResult<T>>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.addAll","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/add-all.html","searchKeys":["addAll","open override fun addAll(results: List<ExportableResult<T>>)","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.addAll"]},{"name":"open override fun apply(index: Int, modifier: (TData) -> TData)","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.apply","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/apply.html","searchKeys":["apply","open override fun apply(index: Int, modifier: (TData) -> TData)","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.apply"]},{"name":"open override fun build(): CsvDatasetLoader<UData, UTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.build","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/-builder/build.html","searchKeys":["build","open override fun build(): CsvDatasetLoader<UData, UTarget>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.Builder.build"]},{"name":"open override fun build(): DefaultOperationLoader<U>","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.build","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/-builder/build.html","searchKeys":["build","open override fun build(): DefaultOperationLoader<U>","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.Builder.build"]},{"name":"open override fun build(): GenericConstantLoader<U>","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.build","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/-builder/build.html","searchKeys":["build","open override fun build(): GenericConstantLoader<U>","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.Builder.build"]},{"name":"open override fun build(): JsonConfigurationLoader","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.build","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/-builder/build.html","searchKeys":["build","open override fun build(): JsonConfigurationLoader","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.Builder.build"]},{"name":"open override fun close()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.close","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/close.html","searchKeys":["close","open override fun close()","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.close"]},{"name":"open override fun close()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.close","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/close.html","searchKeys":["close","open override fun close()","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.close"]},{"name":"open override fun close()","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.close","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/close.html","searchKeys":["close","open override fun close()","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.close"]},{"name":"open override fun combine(mother: Program<TProgram, TOutput>, father: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover.combine","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover/-linear-crossover/combine.html","searchKeys":["combine","open override fun combine(mother: Program<TProgram, TOutput>, father: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover.combine"]},{"name":"open override fun copy(): Environment<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.Environment.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/copy.html","searchKeys":["copy","open override fun copy(): Environment<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.Environment.copy"]},{"name":"open override fun copy(): EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/copy.html","searchKeys":["copy","open override fun copy(): EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.copy"]},{"name":"open override fun copy(): MasterSlave<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/copy.html","searchKeys":["copy","open override fun copy(): MasterSlave<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.copy"]},{"name":"open override fun copy(): RegisterSet<TData>","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/copy.html","searchKeys":["copy","open override fun copy(): RegisterSet<TData>","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.copy"]},{"name":"open override fun copy(): SteadyState<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.copy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/copy.html","searchKeys":["copy","open override fun copy(): SteadyState<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.copy"]},{"name":"open override fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.deepCopy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/deep-copy.html","searchKeys":["deepCopy","open override fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.deepCopy"]},{"name":"open override fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.deepCopy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/deep-copy.html","searchKeys":["deepCopy","open override fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.deepCopy"]},{"name":"open override fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.deepCopy","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/deep-copy.html","searchKeys":["deepCopy","open override fun deepCopy(): EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.deepCopy"]},{"name":"open override fun export(): List<Pair<String, String>>","description":"nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult.export","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-run-based-exportable-result/export.html","searchKeys":["export","open override fun export(): List<Pair<String, String>>","nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult.export"]},{"name":"open override fun fitness(program: Program<TData, TOutput>, fitnessCases: List<FitnessCase<TData, TTarget>>): Double","description":"nz.co.jedsimson.lgp.core.evolution.fitness.BaseFitnessContext.fitness","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-base-fitness-context/fitness.html","searchKeys":["fitness","open override fun fitness(program: Program<TData, TOutput>, fitnessCases: List<FitnessCase<TData, TTarget>>): Double","nz.co.jedsimson.lgp.core.evolution.fitness.BaseFitnessContext.fitness"]},{"name":"open override fun load(): Configuration","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.load","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/load.html","searchKeys":["load","open override fun load(): Configuration","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.load"]},{"name":"open override fun load(): Dataset<TData, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.load","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/load.html","searchKeys":["load","open override fun load(): Dataset<TData, TTarget>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.load"]},{"name":"open override fun load(): List<Operation<T>>","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.load","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/load.html","searchKeys":["load","open override fun load(): List<Operation<T>>","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.load"]},{"name":"open override fun load(): List<T>","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.load","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/load.html","searchKeys":["load","open override fun load(): List<T>","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.load"]},{"name":"open override fun mutate(individual: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.mutate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro/-macro-mutation-operator/mutate.html","searchKeys":["mutate","open override fun mutate(individual: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.mutate"]},{"name":"open override fun mutate(individual: Program<TProgram, TOutput>)","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.mutate","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-micro-mutation-operator/mutate.html","searchKeys":["mutate","open override fun mutate(individual: Program<TProgram, TOutput>)","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.mutate"]},{"name":"open override fun overwrite(index: Int, value: TData)","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.overwrite","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/overwrite.html","searchKeys":["overwrite","open override fun overwrite(index: Int, value: TData)","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.overwrite"]},{"name":"open override fun register(index: Int): Register<TData>","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.register","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/register.html","searchKeys":["register","open override fun register(index: Int): Register<TData>","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.register"]},{"name":"open override fun registerModule(type: RegisteredModuleType, builder: (EnvironmentFacade<TProgram, TOutput, TTarget>) -> Module)","description":"nz.co.jedsimson.lgp.core.environment.Environment.registerModule","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/register-module.html","searchKeys":["registerModule","open override fun registerModule(type: RegisteredModuleType, builder: (EnvironmentFacade<TProgram, TOutput, TTarget>) -> Module)","nz.co.jedsimson.lgp.core.environment.Environment.registerModule"]},{"name":"open override fun registerModules(container: ModuleContainer<TProgram, TOutput, TTarget>)","description":"nz.co.jedsimson.lgp.core.environment.Environment.registerModules","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/register-modules.html","searchKeys":["registerModules","open override fun registerModules(container: ModuleContainer<TProgram, TOutput, TTarget>)","nz.co.jedsimson.lgp.core.environment.Environment.registerModules"]},{"name":"open override fun registerType(index: Int): RegisterType","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.registerType","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/register-type.html","searchKeys":["registerType","open override fun registerType(index: Int): RegisterType","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.registerType"]},{"name":"open override fun reset()","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.reset","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/reset.html","searchKeys":["reset","open override fun reset()","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.reset"]},{"name":"open override fun select(population: MutableList<Program<TProgram, TOutput>>): List<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection.select","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-binary-tournament-selection/select.html","searchKeys":["select","open override fun select(population: MutableList<Program<TProgram, TOutput>>): List<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection.select"]},{"name":"open override fun select(population: MutableList<Program<TProgram, TOutput>>): List<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection.select","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-tournament-selection/select.html","searchKeys":["select","open override fun select(population: MutableList<Program<TProgram, TOutput>>): List<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection.select"]},{"name":"open override fun subscribeToUpdates(callback: (TrainingMessages.ProgressUpdate<TProgram, TOutput>) -> Unit)","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainingJob.subscribeToUpdates","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-training-job/subscribe-to-updates.html","searchKeys":["subscribeToUpdates","open override fun subscribeToUpdates(callback: (TrainingMessages.ProgressUpdate<TProgram, TOutput>) -> Unit)","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainingJob.subscribeToUpdates"]},{"name":"open override fun subscribeToUpdates(callback: (TrainingMessages.ProgressUpdate<TProgram, TOutput>) -> Unit)","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainingJob.subscribeToUpdates","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-training-job/subscribe-to-updates.html","searchKeys":["subscribeToUpdates","open override fun subscribeToUpdates(callback: (TrainingMessages.ProgressUpdate<TProgram, TOutput>) -> Unit)","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainingJob.subscribeToUpdates"]},{"name":"open override fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.test","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/test.html","searchKeys":["test","open override fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.test"]},{"name":"open override fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.test","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/test.html","searchKeys":["test","open override fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.test"]},{"name":"open override fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.test","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/test.html","searchKeys":["test","open override fun test(dataset: Dataset<TProgram, TTarget>): TestResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.test"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.environment.config.Configuration.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.environment.dataset.Feature.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-feature/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.environment.dataset.Feature.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-nominal-feature/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.environment.dataset.Sample.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sample/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.environment.dataset.Sample.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Debug.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/-debug/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Debug.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Trace.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/-trace/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.Trace.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.toString"]},{"name":"open override fun toString(): String","description":"nz.co.jedsimson.lgp.core.program.registers.Register.toString","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.co.jedsimson.lgp.core.program.registers.Register.toString"]},{"name":"open override fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/train.html","searchKeys":["train","open override fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.train"]},{"name":"open override fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/train.html","searchKeys":["train","open override fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.train"]},{"name":"open override fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/train.html","searchKeys":["train","open override fun train(dataset: Dataset<TProgram, TTarget>): EvolutionResult<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.train"]},{"name":"open override fun train(dataset: Dataset<TProgram, TTarget>): TrainingResult<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-trainer/train.html","searchKeys":["train","open override fun train(dataset: Dataset<TProgram, TTarget>): TrainingResult<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.train"]},{"name":"open override fun train(dataset: Dataset<TProgram, TTarget>): TrainingResult<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.train","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-trainer/train.html","searchKeys":["train","open override fun train(dataset: Dataset<TProgram, TTarget>): TrainingResult<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.train"]},{"name":"open override fun writeInstance(data: Sample<TData>)","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.writeInstance","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/write-instance.html","searchKeys":["writeInstance","open override fun writeInstance(data: Sample<TData>)","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.writeInstance"]},{"name":"open override fun writeResultsFrom(source: ResultAggregator<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.CsvResultOutputProvider.writeResultsFrom","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/-csv-result-output-provider/write-results-from.html","searchKeys":["writeResultsFrom","open override fun writeResultsFrom(source: ResultAggregator<T>)","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.CsvResultOutputProvider.writeResultsFrom"]},{"name":"open override fun writeResultsFrom(source: ResultAggregator<T>)","description":"nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.RawResultTableOutputProvider.writeResultsFrom","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-output-providers/-raw-result-table-output-provider/write-results-from.html","searchKeys":["writeResultsFrom","open override fun writeResultsFrom(source: ResultAggregator<T>)","nz.co.jedsimson.lgp.core.evolution.ResultOutputProviders.RawResultTableOutputProvider.writeResultsFrom"]},{"name":"open override val arity: BaseArity","description":"nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation.arity","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-binary-operation/arity.html","searchKeys":["arity","open override val arity: BaseArity","nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation.arity"]},{"name":"open override val arity: BaseArity","description":"nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation.arity","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-unary-operation/arity.html","searchKeys":["arity","open override val arity: BaseArity","nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation.arity"]},{"name":"open override val calculationRegisters: IntRange","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.calculationRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/calculation-registers.html","searchKeys":["calculationRegisters","open override val calculationRegisters: IntRange","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.calculationRegisters"]},{"name":"open override val component: TComponent","description":"nz.co.jedsimson.lgp.core.environment.MemoizedComponentProvider.component","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-memoized-component-provider/component.html","searchKeys":["component","open override val component: TComponent","nz.co.jedsimson.lgp.core.environment.MemoizedComponentProvider.component"]},{"name":"open override val constantRegisters: IntRange","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.constantRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/constant-registers.html","searchKeys":["constantRegisters","open override val constantRegisters: IntRange","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.constantRegisters"]},{"name":"open override val count: Int","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.count","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/count.html","searchKeys":["count","open override val count: Int","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.count"]},{"name":"open override val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.Environment.fitnessFunctionProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/fitness-function-provider.html","searchKeys":["fitnessFunctionProvider","open override val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.Environment.fitnessFunctionProvider"]},{"name":"open override val function: (Arguments<T>) -> T","description":"nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation.function","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-binary-operation/function.html","searchKeys":["function","open override val function: (Arguments<T>) -> T","nz.co.jedsimson.lgp.core.program.instructions.BinaryOperation.function"]},{"name":"open override val function: (Arguments<T>) -> T","description":"nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation.function","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-unary-operation/function.html","searchKeys":["function","open override val function: (Arguments<T>) -> T","nz.co.jedsimson.lgp.core.program.instructions.UnaryOperation.function"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-json-configuration-loader/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.environment.config.JsonConfigurationLoader.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.environment.constants.DoubleConstantLoader.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-double-constant-loader/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.environment.constants.DoubleConstantLoader.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.constants/-generic-constant-loader/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.environment.constants.GenericConstantLoader.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.operations/-default-operation-loader/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.environment.operations.DefaultOperationLoader.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.MultipleOutputFitnessContext.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/-multiple-output-fitness-context/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.MultipleOutputFitnessContext.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.SingleOutputFitnessContext.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-contexts/-single-output-fitness-context/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessContexts.SingleOutputFitnessContext.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-master-slave/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.model.MasterSlave.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.model.SteadyState.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-steady-state/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.model.SteadyState.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro/-macro-mutation-operator/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.operators.mutation.macro.MacroMutationOperator.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro/-micro-mutation-operator/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.operators.mutation.micro.MicroMutationOperator.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover/-linear-crossover/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.operators.recombination.linearCrossover.LinearCrossover.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-binary-tournament-selection/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.operators.selection.BinaryTournamentSelection.information"]},{"name":"open override val information: ModuleInformation","description":"nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection.information","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.operators.selection/-tournament-selection/information.html","searchKeys":["information","open override val information: ModuleInformation","nz.co.jedsimson.lgp.core.evolution.operators.selection.TournamentSelection.information"]},{"name":"open override val inputRegisters: IntRange","description":"nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.inputRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-array-register-set/input-registers.html","searchKeys":["inputRegisters","open override val inputRegisters: IntRange","nz.co.jedsimson.lgp.core.program.registers.ArrayRegisterSet.inputRegisters"]},{"name":"open override val isValid: Boolean = false","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid.isValid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-invalid/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean = false","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid.isValid"]},{"name":"open override val isValid: Boolean = true","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Valid.isValid","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-valid/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean = true","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Valid.isValid"]},{"name":"open override val loggerProvider: LoggerProvider","description":"nz.co.jedsimson.lgp.core.environment.Environment.loggerProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/logger-provider.html","searchKeys":["loggerProvider","open override val loggerProvider: LoggerProvider","nz.co.jedsimson.lgp.core.environment.Environment.loggerProvider"]},{"name":"open override val number: Int","description":"nz.co.jedsimson.lgp.core.program.instructions.BaseArity.number","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-base-arity/number.html","searchKeys":["number","open override val number: Int","nz.co.jedsimson.lgp.core.program.instructions.BaseArity.number"]},{"name":"open override val randomState: Random","description":"nz.co.jedsimson.lgp.core.environment.Environment.randomState","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/random-state.html","searchKeys":["randomState","open override val randomState: Random","nz.co.jedsimson.lgp.core.environment.Environment.randomState"]},{"name":"open override val resultAggregator: ResultAggregator<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.Environment.resultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment/result-aggregator.html","searchKeys":["resultAggregator","open override val resultAggregator: ResultAggregator<TProgram>","nz.co.jedsimson.lgp.core.environment.Environment.resultAggregator"]},{"name":"open override val results: List<ExportableResult<T>>","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.results","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-default-result-aggregator/results.html","searchKeys":["results","open override val results: List<ExportableResult<T>>","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.DefaultResultAggregator.results"]},{"name":"open override val results: MutableList<ExportableResult<T>>","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.results","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-buffered-result-aggregator/results.html","searchKeys":["results","open override val results: MutableList<ExportableResult<T>>","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.BufferedResultAggregator.results"]},{"name":"open override val results: MutableList<ExportableResult<T>>","description":"nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.results","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-result-aggregators/-in-memory-result-aggregator/results.html","searchKeys":["results","open override val results: MutableList<ExportableResult<T>>","nz.co.jedsimson.lgp.core.evolution.ResultAggregators.InMemoryResultAggregator.results"]},{"name":"open override val size: Int","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple.size","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-multiple/size.html","searchKeys":["size","open override val size: Int","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple.size"]},{"name":"open override val size: Int = 1","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single.size","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-single/size.html","searchKeys":["size","open override val size: Int = 1","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single.size"]},{"name":"open suspend override fun result(): TrainingResult<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainingJob.result","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-training-job/result.html","searchKeys":["result","open suspend override fun result(): TrainingResult<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainingJob.result"]},{"name":"open suspend override fun result(): TrainingResult<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainingJob.result","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-training-job/result.html","searchKeys":["result","open suspend override fun result(): TrainingResult<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainingJob.result"]},{"name":"open suspend override fun trainAsync(dataset: Dataset<TProgram, TTarget>): DistributedTrainingJob<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.trainAsync","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-trainer/train-async.html","searchKeys":["trainAsync","open suspend override fun trainAsync(dataset: Dataset<TProgram, TTarget>): DistributedTrainingJob<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.trainAsync"]},{"name":"open suspend override fun trainAsync(dataset: Dataset<TProgram, TTarget>): SequentialTrainingJob<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.trainAsync","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-trainer/train-async.html","searchKeys":["trainAsync","open suspend override fun trainAsync(dataset: Dataset<TProgram, TTarget>): SequentialTrainingJob<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.trainAsync"]},{"name":"open var effectiveInstructions: MutableList<Instruction<TData>>","description":"nz.co.jedsimson.lgp.core.program.Program.effectiveInstructions","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/effective-instructions.html","searchKeys":["effectiveInstructions","open var effectiveInstructions: MutableList<Instruction<TData>>","nz.co.jedsimson.lgp.core.program.Program.effectiveInstructions"]},{"name":"open var fitness: Double","description":"nz.co.jedsimson.lgp.core.program.Program.fitness","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program/fitness.html","searchKeys":["fitness","open var fitness: Double","nz.co.jedsimson.lgp.core.program.Program.fitness"]},{"name":"operator fun invoke(outputs: List<TOutput>, cases: List<FitnessCase<TData, TTarget>>): Double","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction.invoke","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-function/invoke.html","searchKeys":["invoke","operator fun invoke(outputs: List<TOutput>, cases: List<FitnessCase<TData, TTarget>>): Double","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunction.invoke"]},{"name":"sealed class ConfigurationValidity","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/index.html","searchKeys":["ConfigurationValidity","sealed class ConfigurationValidity","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity"]},{"name":"sealed class DiagnosticEvent : Event","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/index.html","searchKeys":["DiagnosticEvent","sealed class DiagnosticEvent : Event","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent"]},{"name":"val CE: (mappingFunction: (Double) -> Double) -> SingleOutputFitnessFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.CE","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/-c-e.html","searchKeys":["CE","val CE: (mappingFunction: (Double) -> Double) -> SingleOutputFitnessFunction<Double>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.CE"]},{"name":"val MAE: SingleOutputFitnessFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.MAE","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/-m-a-e.html","searchKeys":["MAE","val MAE: SingleOutputFitnessFunction<Double>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.MAE"]},{"name":"val MSE: SingleOutputFitnessFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.MSE","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/-m-s-e.html","searchKeys":["MSE","val MSE: SingleOutputFitnessFunction<Double>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.MSE"]},{"name":"val RMSE: SingleOutputFitnessFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.RMSE","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/-r-m-s-e.html","searchKeys":["RMSE","val RMSE: SingleOutputFitnessFunction<Double>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.RMSE"]},{"name":"val SSE: SingleOutputFitnessFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.SSE","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/-s-s-e.html","searchKeys":["SSE","val SSE: SingleOutputFitnessFunction<Double>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.SSE"]},{"name":"val arguments: List<Argument<TData>>","description":"nz.co.jedsimson.lgp.core.program.registers.Arguments.arguments","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-arguments/arguments.html","searchKeys":["arguments","val arguments: List<Argument<TData>>","nz.co.jedsimson.lgp.core.program.registers.Arguments.arguments"]},{"name":"val best: Program<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.best","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-result/best.html","searchKeys":["best","val best: Program<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.best"]},{"name":"val configurationLoader: ConfigurationLoader","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.configurationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/configuration-loader.html","searchKeys":["configurationLoader","val configurationLoader: ConfigurationLoader","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.configurationLoader"]},{"name":"val constantLoader: ConstantLoader<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.constantLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/constant-loader.html","searchKeys":["constantLoader","val constantLoader: ConstantLoader<TProgram>","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.constantLoader"]},{"name":"val context: DiagnosticEventContext","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.context","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/context.html","searchKeys":["context","val context: DiagnosticEventContext","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.context"]},{"name":"val data: Map<String, Any>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionStatistics.data","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-statistics/data.html","searchKeys":["data","val data: Map<String, Any>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionStatistics.data"]},{"name":"val defaultValueProvider: DefaultValueProvider<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.defaultValueProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/default-value-provider.html","searchKeys":["defaultValueProvider","val defaultValueProvider: DefaultValueProvider<TProgram>","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.defaultValueProvider"]},{"name":"val description: String","description":"nz.co.jedsimson.lgp.core.evolution.Description.description","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution/-description/description.html","searchKeys":["description","val description: String","nz.co.jedsimson.lgp.core.evolution.Description.description"]},{"name":"val description: String","description":"nz.co.jedsimson.lgp.core.modules.ModuleInformation.description","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-information/description.html","searchKeys":["description","val description: String","nz.co.jedsimson.lgp.core.modules.ModuleInformation.description"]},{"name":"val environment: EnvironmentFacade<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.Trainer.environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-trainer/environment.html","searchKeys":["environment","val environment: EnvironmentFacade<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.Trainer.environment"]},{"name":"val environment: EnvironmentFacade<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.program.ProgramGenerator.environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-program-generator/environment.html","searchKeys":["environment","val environment: EnvironmentFacade<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.program.ProgramGenerator.environment"]},{"name":"val environment: EnvironmentFacade<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.environment","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.instructions/-instruction-generator/environment.html","searchKeys":["environment","val environment: EnvironmentFacade<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.program.instructions.InstructionGenerator.environment"]},{"name":"val evaluations: List<EvolutionResult<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingResult.evaluations","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-result/evaluations.html","searchKeys":["evaluations","val evaluations: List<EvolutionResult<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.training.TrainingResult.evaluations"]},{"name":"val expected: List<Target<TProgram>>","description":"nz.co.jedsimson.lgp.core.evolution.model.TestResult.expected","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-test-result/expected.html","searchKeys":["expected","val expected: List<Target<TProgram>>","nz.co.jedsimson.lgp.core.evolution.model.TestResult.expected"]},{"name":"val featureParseFunction: (Header, Row) -> Sample<TData>","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.featureParseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/feature-parse-function.html","searchKeys":["featureParseFunction","val featureParseFunction: (Header, Row) -> Sample<TData>","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.featureParseFunction"]},{"name":"val features: Int","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset.features","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/features.html","searchKeys":["features","val features: Int","nz.co.jedsimson.lgp.core.environment.dataset.Dataset.features"]},{"name":"val features: List<Feature<TData>>","description":"nz.co.jedsimson.lgp.core.environment.dataset.Sample.features","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-sample/features.html","searchKeys":["features","val features: List<Feature<TData>>","nz.co.jedsimson.lgp.core.environment.dataset.Sample.features"]},{"name":"val features: Sample<TData>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase.features","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-case/features.html","searchKeys":["features","val features: Sample<TData>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase.features"]},{"name":"val fitness: Double","description":"nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation.fitness","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-evaluation/fitness.html","searchKeys":["fitness","val fitness: Double","nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation.fitness"]},{"name":"val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.fitnessFunctionProvider","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/fitness-function-provider.html","searchKeys":["fitnessFunctionProvider","val fitnessFunctionProvider: FitnessFunctionProvider<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.fitnessFunctionProvider"]},{"name":"val identifier: UUID","description":"nz.co.jedsimson.lgp.core.environment.events.Event.identifier","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event/identifier.html","searchKeys":["identifier","val identifier: UUID","nz.co.jedsimson.lgp.core.environment.events.Event.identifier"]},{"name":"val index: RegisterIndex","description":"nz.co.jedsimson.lgp.core.program.registers.Register.index","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/--index--.html","searchKeys":["index","val index: RegisterIndex","nz.co.jedsimson.lgp.core.program.registers.Register.index"]},{"name":"val individual: Program<TProgram, TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation.individual","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-evaluation/individual.html","searchKeys":["individual","val individual: Program<TProgram, TOutput>","nz.co.jedsimson.lgp.core.evolution.fitness.Evaluation.individual"]},{"name":"val individuals: List<Program<TProgram, TOutput>>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.individuals","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-result/individuals.html","searchKeys":["individuals","val individuals: List<Program<TProgram, TOutput>>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.individuals"]},{"name":"val inputs: List<Sample<TData>>","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset.inputs","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/inputs.html","searchKeys":["inputs","val inputs: List<Sample<TData>>","nz.co.jedsimson.lgp.core.environment.dataset.Dataset.inputs"]},{"name":"val key: String","description":"nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.key","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-diagnostic-event/key.html","searchKeys":["key","val key: String","nz.co.jedsimson.lgp.core.environment.events.DiagnosticEvent.key"]},{"name":"val labels: List<String>","description":"nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature.labels","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-nominal-feature/labels.html","searchKeys":["labels","val labels: List<String>","nz.co.jedsimson.lgp.core.environment.dataset.NominalFeature.labels"]},{"name":"val migrationInterval: Int","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.migrationInterval","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/-island-migration-options/migration-interval.html","searchKeys":["migrationInterval","val migrationInterval: Int","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.migrationInterval"]},{"name":"val migrationSize: Int","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.migrationSize","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/-island-migration-options/migration-size.html","searchKeys":["migrationSize","val migrationSize: Int","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.migrationSize"]},{"name":"val model: EvolutionModel<TProgram, TOutput, TTarget>","description":"nz.co.jedsimson.lgp.core.evolution.training.Trainer.model","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-trainer/model.html","searchKeys":["model","val model: EvolutionModel<TProgram, TOutput, TTarget>","nz.co.jedsimson.lgp.core.evolution.training.Trainer.model"]},{"name":"val models: List<EvolutionModel<TProgram, TOutput, TTarget>>","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingResult.models","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-result/models.html","searchKeys":["models","val models: List<EvolutionModel<TProgram, TOutput, TTarget>>","nz.co.jedsimson.lgp.core.evolution.training.TrainingResult.models"]},{"name":"val modules: MutableMap<RegisteredModuleType, ModuleBuilder<TProgram, TOutput, TTarget>>","description":"nz.co.jedsimson.lgp.core.modules.ModuleContainer.modules","location":"-l-g-p/nz.co.jedsimson.lgp.core.modules/-module-container/modules.html","searchKeys":["modules","val modules: MutableMap<RegisteredModuleType, ModuleBuilder<TProgram, TOutput, TTarget>>","nz.co.jedsimson.lgp.core.modules.ModuleContainer.modules"]},{"name":"val name: String","description":"nz.co.jedsimson.lgp.core.environment.dataset.Feature.name","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-feature/name.html","searchKeys":["name","val name: String","nz.co.jedsimson.lgp.core.environment.dataset.Feature.name"]},{"name":"val numIslands: Int","description":"nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.numIslands","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-island-migration/-island-migration-options/num-islands.html","searchKeys":["numIslands","val numIslands: Int","nz.co.jedsimson.lgp.core.evolution.model.IslandMigration.IslandMigrationOptions.numIslands"]},{"name":"val numberOfListeners: Int","description":"nz.co.jedsimson.lgp.core.environment.events.EventRegistry.numberOfListeners","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.events/-event-registry/number-of-listeners.html","searchKeys":["numberOfListeners","val numberOfListeners: Int","nz.co.jedsimson.lgp.core.environment.events.EventRegistry.numberOfListeners"]},{"name":"val operationLoader: OperationLoader<TProgram>","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.operationLoader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/operation-loader.html","searchKeys":["operationLoader","val operationLoader: OperationLoader<TProgram>","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.operationLoader"]},{"name":"val outputs: List<TTarget>","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset.outputs","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/outputs.html","searchKeys":["outputs","val outputs: List<TTarget>","nz.co.jedsimson.lgp.core.environment.dataset.Dataset.outputs"]},{"name":"val predicted: List<TOutput>","description":"nz.co.jedsimson.lgp.core.evolution.model.TestResult.predicted","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-test-result/predicted.html","searchKeys":["predicted","val predicted: List<TOutput>","nz.co.jedsimson.lgp.core.evolution.model.TestResult.predicted"]},{"name":"val progress: Double","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate.progress","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-messages/-progress-update/progress.html","searchKeys":["progress","val progress: Double","nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate.progress"]},{"name":"val randomState: Random","description":"nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator.randomState","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-uniformly-distributed-generator/random-state.html","searchKeys":["randomState","val randomState: Random","nz.co.jedsimson.lgp.core.environment.dataset.UniformlyDistributedGenerator.randomState"]},{"name":"val randomStateSeed: Long? = null","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.randomStateSeed","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/random-state-seed.html","searchKeys":["randomStateSeed","val randomStateSeed: Long? = null","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.randomStateSeed"]},{"name":"val reader: Reader","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.reader","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/reader.html","searchKeys":["reader","val reader: Reader","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.reader"]},{"name":"val reason: String","description":"nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid.reason","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration-validity/-invalid/reason.html","searchKeys":["reason","val reason: String","nz.co.jedsimson.lgp.core.environment.config.ConfigurationValidity.Invalid.reason"]},{"name":"val result: EvolutionResult<TProgram, TOutput>?","description":"nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate.result","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-training-messages/-progress-update/result.html","searchKeys":["result","val result: EvolutionResult<TProgram, TOutput>?","nz.co.jedsimson.lgp.core.evolution.training.TrainingMessages.ProgressUpdate.result"]},{"name":"val resultAggregator: ResultAggregator<TProgram>? = null","description":"nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.resultAggregator","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment/-environment-specification/result-aggregator.html","searchKeys":["resultAggregator","val resultAggregator: ResultAggregator<TProgram>? = null","nz.co.jedsimson.lgp.core.environment.EnvironmentSpecification.resultAggregator"]},{"name":"val run: Int","description":"nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult.run","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-run-based-exportable-result/run.html","searchKeys":["run","val run: Int","nz.co.jedsimson.lgp.core.evolution.model.RunBasedExportableResult.run"]},{"name":"val runs: Int","description":"nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.runs","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-distributed-trainer/runs.html","searchKeys":["runs","val runs: Int","nz.co.jedsimson.lgp.core.evolution.training.DistributedTrainer.runs"]},{"name":"val runs: Int","description":"nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.runs","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.training/-sequential-trainer/runs.html","searchKeys":["runs","val runs: Int","nz.co.jedsimson.lgp.core.evolution.training.SequentialTrainer.runs"]},{"name":"val samples: Int","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset.samples","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/samples.html","searchKeys":["samples","val samples: Int","nz.co.jedsimson.lgp.core.environment.dataset.Dataset.samples"]},{"name":"val size: Int","description":"nz.co.jedsimson.lgp.core.program.registers.Arguments.size","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-arguments/size.html","searchKeys":["size","val size: Int","nz.co.jedsimson.lgp.core.program.registers.Arguments.size"]},{"name":"val statistics: List<EvolutionStatistics>","description":"nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.statistics","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.model/-evolution-result/statistics.html","searchKeys":["statistics","val statistics: List<EvolutionStatistics>","nz.co.jedsimson.lgp.core.evolution.model.EvolutionResult.statistics"]},{"name":"val target: TTarget","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase.target","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-case/target.html","searchKeys":["target","val target: TTarget","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessCase.target"]},{"name":"val targetParseFunction: (Header, Row) -> TTarget","description":"nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.targetParseFunction","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-csv-dataset-loader/target-parse-function.html","searchKeys":["targetParseFunction","val targetParseFunction: (Header, Row) -> TTarget","nz.co.jedsimson.lgp.core.environment.dataset.CsvDatasetLoader.targetParseFunction"]},{"name":"val targets: Int","description":"nz.co.jedsimson.lgp.core.environment.dataset.Dataset.targets","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-dataset/targets.html","searchKeys":["targets","val targets: Int","nz.co.jedsimson.lgp.core.environment.dataset.Dataset.targets"]},{"name":"val thresholdCE: (threshold: Double) -> SingleOutputFitnessFunction<Double>","description":"nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.thresholdCE","location":"-l-g-p/nz.co.jedsimson.lgp.core.evolution.fitness/-fitness-functions/threshold-c-e.html","searchKeys":["thresholdCE","val thresholdCE: (threshold: Double) -> SingleOutputFitnessFunction<Double>","nz.co.jedsimson.lgp.core.evolution.fitness.FitnessFunctions.thresholdCE"]},{"name":"val value: T","description":"nz.co.jedsimson.lgp.core.program.registers.Argument.value","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-argument/value.html","searchKeys":["value","val value: T","nz.co.jedsimson.lgp.core.program.registers.Argument.value"]},{"name":"val value: TData","description":"nz.co.jedsimson.lgp.core.environment.dataset.Feature.value","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-feature/value.html","searchKeys":["value","val value: TData","nz.co.jedsimson.lgp.core.environment.dataset.Feature.value"]},{"name":"val value: TData","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single.value","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-single/value.html","searchKeys":["value","val value: TData","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Single.value"]},{"name":"val value: TData","description":"nz.co.jedsimson.lgp.core.program.Outputs.Single.value","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/-single/value.html","searchKeys":["value","val value: TData","nz.co.jedsimson.lgp.core.program.Outputs.Single.value"]},{"name":"val values: List<TData>","description":"nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple.values","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.dataset/-targets/-multiple/values.html","searchKeys":["values","val values: List<TData>","nz.co.jedsimson.lgp.core.environment.dataset.Targets.Multiple.values"]},{"name":"val values: List<TData>","description":"nz.co.jedsimson.lgp.core.program.Outputs.Multiple.values","location":"-l-g-p/nz.co.jedsimson.lgp.core.program/-outputs/-multiple/values.html","searchKeys":["values","val values: List<TData>","nz.co.jedsimson.lgp.core.program.Outputs.Multiple.values"]},{"name":"var branchInitialisationRate: Double = 0.0","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.branchInitialisationRate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/branch-initialisation-rate.html","searchKeys":["branchInitialisationRate","var branchInitialisationRate: Double = 0.0","nz.co.jedsimson.lgp.core.environment.config.Configuration.branchInitialisationRate"]},{"name":"var constants: List<String>","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.constants","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/constants.html","searchKeys":["constants","var constants: List<String>","nz.co.jedsimson.lgp.core.environment.config.Configuration.constants"]},{"name":"var constantsRate: Double = 0.5","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.constantsRate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/constants-rate.html","searchKeys":["constantsRate","var constantsRate: Double = 0.5","nz.co.jedsimson.lgp.core.environment.config.Configuration.constantsRate"]},{"name":"var crossoverRate: Double = 0.5","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.crossoverRate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/crossover-rate.html","searchKeys":["crossoverRate","var crossoverRate: Double = 0.5","nz.co.jedsimson.lgp.core.environment.config.Configuration.crossoverRate"]},{"name":"var generations: Int = 50","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.generations","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/generations.html","searchKeys":["generations","var generations: Int = 50","nz.co.jedsimson.lgp.core.environment.config.Configuration.generations"]},{"name":"var initialMaximumProgramLength: Int = 30","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.initialMaximumProgramLength","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/initial-maximum-program-length.html","searchKeys":["initialMaximumProgramLength","var initialMaximumProgramLength: Int = 30","nz.co.jedsimson.lgp.core.environment.config.Configuration.initialMaximumProgramLength"]},{"name":"var initialMinimumProgramLength: Int = 10","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.initialMinimumProgramLength","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/initial-minimum-program-length.html","searchKeys":["initialMinimumProgramLength","var initialMinimumProgramLength: Int = 10","nz.co.jedsimson.lgp.core.environment.config.Configuration.initialMinimumProgramLength"]},{"name":"var macroMutationRate: Double = 0.5","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.macroMutationRate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/macro-mutation-rate.html","searchKeys":["macroMutationRate","var macroMutationRate: Double = 0.5","nz.co.jedsimson.lgp.core.environment.config.Configuration.macroMutationRate"]},{"name":"var maximumProgramLength: Int = 200","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.maximumProgramLength","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/maximum-program-length.html","searchKeys":["maximumProgramLength","var maximumProgramLength: Int = 200","nz.co.jedsimson.lgp.core.environment.config.Configuration.maximumProgramLength"]},{"name":"var microMutationRate: Double = 0.5","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.microMutationRate","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/micro-mutation-rate.html","searchKeys":["microMutationRate","var microMutationRate: Double = 0.5","nz.co.jedsimson.lgp.core.environment.config.Configuration.microMutationRate"]},{"name":"var minimumProgramLength: Int = 10","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.minimumProgramLength","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/minimum-program-length.html","searchKeys":["minimumProgramLength","var minimumProgramLength: Int = 10","nz.co.jedsimson.lgp.core.environment.config.Configuration.minimumProgramLength"]},{"name":"var numCalculationRegisters: Int = 10","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.numCalculationRegisters","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/num-calculation-registers.html","searchKeys":["numCalculationRegisters","var numCalculationRegisters: Int = 10","nz.co.jedsimson.lgp.core.environment.config.Configuration.numCalculationRegisters"]},{"name":"var numFeatures: Int = 0","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.numFeatures","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/num-features.html","searchKeys":["numFeatures","var numFeatures: Int = 0","nz.co.jedsimson.lgp.core.environment.config.Configuration.numFeatures"]},{"name":"var numOffspring: Int = 20","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.numOffspring","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/num-offspring.html","searchKeys":["numOffspring","var numOffspring: Int = 20","nz.co.jedsimson.lgp.core.environment.config.Configuration.numOffspring"]},{"name":"var numberOfRuns: Int = 1","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.numberOfRuns","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/number-of-runs.html","searchKeys":["numberOfRuns","var numberOfRuns: Int = 1","nz.co.jedsimson.lgp.core.environment.config.Configuration.numberOfRuns"]},{"name":"var operations: List<String>","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.operations","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/operations.html","searchKeys":["operations","var operations: List<String>","nz.co.jedsimson.lgp.core.environment.config.Configuration.operations"]},{"name":"var populationSize: Int = 100","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.populationSize","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/population-size.html","searchKeys":["populationSize","var populationSize: Int = 100","nz.co.jedsimson.lgp.core.environment.config.Configuration.populationSize"]},{"name":"var stoppingCriterion: Double = 0.0","description":"nz.co.jedsimson.lgp.core.environment.config.Configuration.stoppingCriterion","location":"-l-g-p/nz.co.jedsimson.lgp.core.environment.config/-configuration/stopping-criterion.html","searchKeys":["stoppingCriterion","var stoppingCriterion: Double = 0.0","nz.co.jedsimson.lgp.core.environment.config.Configuration.stoppingCriterion"]},{"name":"var value: T","description":"nz.co.jedsimson.lgp.core.program.registers.Register.value","location":"-l-g-p/nz.co.jedsimson.lgp.core.program.registers/-register/value.html","searchKeys":["value","var value: T","nz.co.jedsimson.lgp.core.program.registers.Register.value"]}]
