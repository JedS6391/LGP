group 'LGP'
version '3.0'

buildscript {
    ext.kotlin_version = '1.3.11'
    ext.dokka_version = '0.9.17'
    ext.kotlinx_coroutines_version = '1.0.1'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "http://dl.bintray.com/kotlin/kotlin-eap"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    compile group: 'com.opencsv', name: 'opencsv', version: '4.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    // For YAML parsing
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.2'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"      \
                         << "-Xlint:all"            \
                         << "-Xlint:-processing"    \
                         << "-Xlint:-serial"        \
                         << "-Werror"
}

task dokkaApiHtml(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'html'
    outputDirectory = "$buildDir/../docs/api/html"
}


task dokkaApiJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/../docs/api/javadoc"
}

task examplesJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'LGP',
                'Implementation-Version': version
    }

    include('lgp/examples/*')
    include('lgp/examples/java/*')
    exclude('lgp/core')
    exclude('lgp/lib')

    baseName = project.name + '-examples'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task coreJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'LGP',
                'Implementation-Version': version
    }

    exclude('lgp/examples')

    baseName = project.name + '-core'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task printVersion {
    doLast {
        println project.version
    }
}
